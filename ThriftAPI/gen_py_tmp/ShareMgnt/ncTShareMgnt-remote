#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from ShareMgnt import ncTShareMgnt
from ShareMgnt.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  string Usrm_CreateOrganization(ncTAddOrgParam addParam)')
    print('  void Usrm_EditOrganization(ncTEditDepartParam editParam)')
    print('  void Usrm_DeleteOrganization(string organId)')
    print('  ncTUsrmOrganizationInfo Usrm_GetOrganizationById(string organId)')
    print('  ncTUsrmOrganizationInfo Usrm_GetOrganizationByName(string organName)')
    print('   Usrm_GetSupervisoryRootOrg(string userId)')
    print('   Usrm_GetRootOrgInfosByUserId(string userId)')
    print('  string Usrm_AddDepartment(ncTAddDepartParam addParam)')
    print('  void Usrm_EditDepartment(ncTEditDepartParam eidtParam)')
    print('  void Usrm_DeleteDepartment(string depart_id, string manager_id)')
    print('  ncTUsrmDepartmentInfo Usrm_GetDepartmentById(string depart_id)')
    print('  ncTUsrmDepartmentInfo Usrm_GetDepartmentByName(string name)')
    print('  void Usrm_MoveDepartment(string srcDepartId, string destDepartId)')
    print('   Usrm_GetSubDepartments(string departmentId)')
    print('  i64 Usrm_GetDepartmentOfUsersCount(string departmentId)')
    print('   Usrm_GetDepartmentOfUsers(string departmentId, i32 start, i32 limit)')
    print('  void Usrm_AddUserToDepartment( userIds, string departmentId)')
    print('   Usrm_MoveUserToDepartment( userIds, string srcDepartId, string destDepartId)')
    print('   Usrm_RomoveUserFromDepartment( userIds, string departmentId)')
    print('   Usrm_SearchDepartmentOfUsers(string departmentId, string searchKey, i32 start, i32 limit)')
    print('  i64 Usrm_CountSearchDepartmentOfUsers(string departmentId, string searchKey)')
    print('   Usrm_SearchSupervisoryUsers(string managerid, string key, i32 start, i32 limit)')
    print('  i64 Usrm_GetSupervisoryUsersUsedSpace(string managerid)')
    print('   Usrm_LocateUser(string managerid, string userid)')
    print('  bool Usrm_CheckUserInDepart(string userId, string departId)')
    print('  void Usrm_EditDepartOSS(string departmentId, string ossId)')
    print('   Usrm_SearchDepartments(string userId, string searchKey, i32 start, i32 limit)')
    print('   Usrm_GetDeepestDeparts(string departId)')
    print('   Usrm_GetSupervisoryDeparts(string userId)')
    print('  ncTUsrmDepartmentInfo Usrm_GetOrgDepartmentById(string depart_id)')
    print('  ncTUsrmDepartmentInfo Usrm_GetDepartmentByThirdId(string third_id)')
    print('   Usrm_GetDepartResponsiblePerson(string departId)')
    print('   Usrm_GetDepartmentParentPath( departIds)')
    print('  void Usrm_SortDepartment(string userId, string srcDepartId, string destUpDepartId)')
    print('  string Usrm_AddUser(ncTUsrmAddUserInfo user, string responsiblePersonId)')
    print('  void Usrm_EditUser(ncTEditUserParam param, string responsiblePersonId)')
    print('  void Usrm_EditUserPriority(string userId, i32 priority)')
    print('  void Usrm_DelUser(string userId)')
    print('  ncTUsrmGetUserInfo Usrm_GetUserInfo(string userId)')
    print('  ncTUsrmGetUserInfo Usrm_GetUserInfoByAccount(string account)')
    print('  string Usrm_GetUserIdByAccount(string account)')
    print('  i64 Usrm_GetAllUserCount()')
    print('   Usrm_GetAllUsers(i32 start, i32 limit)')
    print('  void Usrm_ModifyPassword(string account, string oldPassword, string newPassword, ncTUserModifyPwdOption option)')
    print('  void Usrm_ResetPassword(string userId)')
    print('  void Usrm_ResetAllPassword(string password)')
    print('  void Usrm_SetPasswordConfig(ncTUsrmPasswordConfig pwdConfig)')
    print('  ncTUsrmPasswordConfig Usrm_GetPasswordConfig()')
    print('  void Usrm_SetUserStatus(string userId, bool status)')
    print('  string Usrm_SelfRegistration(string registerId, string certID, string realName, string pwd)')
    print('  void Usrm_EditUserSpace(string userId, i64 spaceSize, string responsiblePersonId)')
    print('  void Usrm_SetUserDocStatus(bool status)')
    print('  bool Usrm_GetUserDocStatus()')
    print('  void Usrm_SetDefaulSpaceSize(i64 spaceSize)')
    print('  i64 Usrm_GetDefaulSpaceSize()')
    print('  void Usrm_EditUserOSS(string userId, string ossId)')
    print('  void Usrm_EditLimitSpace(string userId, i64 limitUserSpaceSize, i64 limitDocSpaceSize)')
    print('  void Usrm_UpdateManagerDocSpace(string userId, i64 spaceSize)')
    print('  void Usrm_UpdateManagerUserSpace(string userId, i64 spaceSize)')
    print('  void Usrm_CheckHasEnoughSpace( userIds, i64 spaceSize, string responsiblePersonId)')
    print('  void Usrm_CheckSpaceByDeptId(string deptId, bool enableSub, i64 spaceSize, string responsiblePersonId)')
    print('  void Usrm_CheckDocSpace(string userId, i64 spaceSize)')
    print('  void Usrm_CheckUserSpace(string userId, i64 spaceSize)')
    print('  void Usrm_ReCalcAdminLimitSpace()')
    print('  bool Usrm_GetSystemInitStatus()')
    print('  void Usrm_InitSystem()')
    print('  void Usrm_SetPwdControl(string userId, ncTUsrmPwdControlConfig param)')
    print('  ncTUsrmPwdControlConfig Usrm_GetPwdControl(string userId)')
    print('  void Usrm_SetThirdPwdLock(bool enable)')
    print('  bool Usrm_GetThirdPwdLock()')
    print('  string Usrm_GetTenantUsageStatistics(string userId)')
    print('  void Usrm_SetAutoDisable(ncTUserAutoDisableConfig params)')
    print('  ncTUserAutoDisableConfig Usrm_GetAutoDisable()')
    print('  void Usrm_SetFreezeStatus(bool status)')
    print('  bool Usrm_GetFreezeStatus()')
    print('  void Usrm_SetUserFreezeStatus(string userId, bool freezeStatus)')
    print('  void Usrm_SetRealNameAuthStatus(bool status)')
    print('  bool Usrm_GetRealNameAuthStatus()')
    print('  void Usrm_SetUserRealNameAuthStatus(string userId, bool status)')
    print('  void Usrm_EditAdminAccount(string adminId, string account)')
    print('  ncTUsrmGetUserInfo Usrm_GetUserInfoByThirdId(string thirdId)')
    print('  void Usrm_CheckUserStatus(string userId)')
    print('  void Usrm_SetUserExpireTime(string userId, i32 expireTime)')
    print('  i64 Usrm_GetSiteUsedUserNum(string siteId)')
    print('  bool Usrm_GetTriSystemStatus()')
    print('  void Usrm_SetTriSystemStatus(bool enable)')
    print('  ncTThirdPartyAuthConf Usrm_GetThirdPartyAuth()')
    print('  i64 AddThirdPartyAppConfig(ncTThirdPartyConfig config)')
    print('  void SetThirdPartyAppConfig(ncTThirdPartyConfig config)')
    print('  void DeleteThirdPartyAppConfig(i64 indexId)')
    print('   GetThirdPartyAppConfig(ncTPluginType pluginType)')
    print('  void SYNC_SyncToADOnce()')
    print('  void SYNC_StartSync(string appId, bool autoSync)')
    print('  string AddThirdSyncDBInfo(ncTThirdDBInfo thirdDbInfo)')
    print('  ncTThirdDBInfo GetThirdSyncDBInfo(string thirdDbId)')
    print('  void EditThirdSyncDBInfo(ncTThirdDBInfo thirdDbInfo)')
    print('  void DeleteThirdSyncDBInfo(string thirdDbId)')
    print('  ncTThirdTableInfo GetThirdDbTableInfos(string thirdDbId)')
    print('  void DeleteThirdTableInfo(string thirdTableId)')
    print('  string AddThirdDepartTableInfo(ncTThirdDepartTableInfo thirdTableInfo)')
    print('  void EditThirdDepartTableInfo(ncTThirdDepartTableInfo thirdTableInfo)')
    print('  string AddThirdDepartRelationTableInfo(ncTThirdDepartRelationTableInfo thirdTableInfo)')
    print('  void EditThirdDepartRelationTableInfo(ncTThirdDepartRelationTableInfo thirdTableInfo)')
    print('  string AddThirdUserTableInfo(ncTThirdUserTableInfo thirdTableInfo)')
    print('  void EditThirdUserTableInfo(ncTThirdUserTableInfo thirdTableInfo)')
    print('  string AddThirdUserRelationTableInfo(ncTThirdUserDepartRelationTableInfo thirdTableInfo)')
    print('  void EditThirdUserRelationTableInfo(ncTThirdUserDepartRelationTableInfo thirdTableInfo)')
    print('  void SetThirdDbSyncConfig(string thirdDbId, ncTThirdDbSyncConfig syncConfig)')
    print('  ncTThirdDbSyncConfig GetThirdDbSyncConfig(string thirdDbId)')
    print('  bool Usrm_ValidateSecurityDevice(string params)')
    print('  void AddGlobalThirdPartyPlugin(ncTThirdPartyPluginInfo pluginInfo)')
    print('  void AddLocalThirdPartyPlugin(ncTThirdPartyPluginInfo pluginInfo)')
    print('  void PushMessageToThirdParty(string content,  receiverIds, string appId)')
    print('  void PushMessageByPlugin(string content,  userIds)')
    print('  bool ThirdPartySendVcodeBySMSPluginExist()')
    print('  bool GetThirdAuthTypeStatus(ncTMFAType authtype)')
    print('  i64 Usrm_AddDomain(ncTUsrmDomainInfo domain)')
    print('  void Usrm_EditDomain(ncTUsrmDomainInfo domain)')
    print('  void Usrm_DeleteDomain(i64 domainId)')
    print('   Usrm_GetAllDomains()')
    print('  ncTUsrmDomainInfo Usrm_GetDomainByName(string domainName)')
    print('  ncTUsrmDomainInfo Usrm_GetDomainById(i64 domainId)')
    print('  void Usrm_SetDomainStatus(i64 domainId, bool status)')
    print('  ncTUsrmDomainNode Usrm_ExpandDomainNode(ncTUsrmDomainInfo domain, string nodePath)')
    print('  void Usrm_SetDomainSyncStatus(i64 domainId, i32 status)')
    print('  i32 Usrm_GetDomainSyncStatus(i64 domainId)')
    print('  void Usrm_SetDomainConfig(i64 domainId, ncTUsrmDomainConfig domainConfig)')
    print('  ncTUsrmDomainConfig Usrm_GetDomainConfig(i64 domainId)')
    print('  void Usrm_SetDomainKeyConfig(i64 domainId, ncTUsrmDomainKeyConfig keyConfig)')
    print('  ncTUsrmDomainKeyConfig Usrm_GetDomainKeyConfig(i64 domainId)')
    print('  void Usrm_SetADSSOStatus(bool status)')
    print('  bool Usrm_GetADSSOStatus()')
    print('  void Usrm_CheckFailoverDomainAvailable( failoverDomains)')
    print('  void Usrm_EditFailoverDomains( failoverDomains, i64 parentDomainId)')
    print('   Usrm_GetFailoverDomains(i64 parentDomainId)')
    print('  void Usrm_ImportDomainUsers(ncTUsrmImportContent content, ncTUsrmImportOption option, string responsiblePersonId)')
    print('  void Usrm_ImportDomainOUs(ncTUsrmImportContent content, ncTUsrmImportOption option, string responsiblePersonId)')
    print('  ncTUsrmImportResult Usrm_GetImportProgress()')
    print('  void Usrm_ClearImportProgress()')
    print('   Usrm_GetThirdPartyRootNode(string userId)')
    print('  ncTUsrmThirdPartyNode Usrm_ExpandThirdPartyNode(string thirdId)')
    print('  void Usrm_ImportThirdPartyOUs( ous,  users, ncTUsrmImportOption option, string responsiblePersonId)')
    print('  void Usrm_ImportBatchUsers(ncTBatchUsersFile userInfoFile, bool userCover, string responsiblePersonId)')
    print('  string Usrm_ExportBatchUsers( departmentIds, string responsiblePersonId)')
    print('  string Usrm_DownloadBatchUsers(string taskId)')
    print('  string Usrm_DownloadImportFailedUsers()')
    print('  ncTUsrmImportResult Usrm_GetProgress()')
    print('   Usrm_GetErrorInfos(i64 start, i64 limit)')
    print('  bool Usrm_GetExportBatchUsersTaskStatus(string taskId)')
    print('  string Usrm_CreatePersonGroup(string userId, string groupName)')
    print('  void Usrm_DeletePersonGroup(string userId, string groupId)')
    print('  void Usrm_EditPersonGroup(string userId, string groupId, string newName)')
    print('   Usrm_GetPersonGroups(string userId)')
    print('  void Usrm_AddPersonById(string userId,  userIds, string groupId)')
    print('  void Usrm_DelPerson(string userId,  userIds, string groupId)')
    print('   Usrm_GetPersonFromGroup(string userId, string groupId, i32 start, i32 limit)')
    print('   Usrm_SearchPersonFromGroupByName(string userId, string searchKey)')
    print('   Operm_GetCurrentOnlineUser()')
    print('   Operm_GetMaxOnlineUserDay(string dateMonth)')
    print('   Operm_GetMaxOnlineUserMonth(string startMonth, string endTMonth)')
    print('  string Operm_GetEarliestTime()')
    print('  void OEM_SetConfig(ncTOEMInfo oemInfo)')
    print('   OEM_GetConfigBySection(string section)')
    print('  string OEM_GetConfigByOption(string section, string option)')
    print('  void OEM_SetUninstallPwd(string pwd)')
    print('  string OEM_GetUninstallPwd()')
    print('  bool OEM_GetUninstallPwdStatus()')
    print('  void OEM_CheckUninstallPwd(string pwd)')
    print('  void SetCustomConfigOfString(string key, string value)')
    print('  void SetCustomConfigOfInt64(string key, i64 value)')
    print('  void SetCustomConfigOfBool(string key, bool value)')
    print('  string GetCustomConfigOfString(string key)')
    print('  i64 GetCustomConfigOfInt64(string key)')
    print('  bool GetCustomConfigOfBool(string key)')
    print('  ncTSmtpSrvConf SMTP_GetConfig()')
    print('  void SMTP_SetConfig(ncTSmtpSrvConf conf)')
    print('  void SMTP_ServerTest(ncTSmtpSrvConf conf)')
    print('  void SMTP_ReceiverTest( toList)')
    print('  void SMTP_SetAdminMailList(string adminId,  mailList)')
    print('   SMTP_GetAdminMailList(string adminId)')
    print('  ncTAlarmConfig Alarm_GetConfig()')
    print('  void Alarm_SetConfig(ncTAlarmConfig conf)')
    print('  void NC_SendNotify(string notify, string param)')
    print('  void SMTP_Alarm_SetConfig( toEmailList)')
    print('   SMTP_Alarm_GetConfig()')
    print('  void SMTP_SendEmail( toEmailList, string subject, string content)')
    print('   GetGlobalPort()')
    print('   SetGlobalPort(i32 httpPort, i32 httpsPort)')
    print('  void SetHostName(string host)')
    print('  string GetHostName()')
    print('   GetLocalPort()')
    print('  void SetLocalPort(i32 httpPort, i32 httpsPort)')
    print('  void SetGlobalEOSSPort(ncTEOSSPortInfo portInfo)')
    print('  ncTEOSSPortInfo GetGlobalEOSSPort()')
    print('  void SetLocalEOSSPort(ncTEOSSPortInfo portInfo)')
    print('  ncTEOSSPortInfo GetLocalEOSSPort()')
    print('  void SetLocalCert(string certFile, string privateKey, string caFile, string caKey)')
    print('  void SetGlobalCert(string certFile, string privateKey)')
    print('  void SetGlobalCertInternally()')
    print('  ncTCertInfo GetGlobalCertInfo()')
    print('  void SetOssGlobalCert(string certFile, string privateKey)')
    print('  void SetOssGlobalCertInternally()')
    print('  ncTCertInfo GetOssGlobalCertInfo()')
    print('  void SetGlobalClientHttpsStatus(bool status)')
    print('  void SetGlobalConsoleHttpsStatus(bool status)')
    print('  bool GetGlobalClientHttpsStatus()')
    print('  bool GetGlobalConsoleHttpsStatus()')
    print('  i32 GetEACPHttpsPort()')
    print('  void SetEACPHttpsPort(i32 httpsPort)')
    print('  i32 GetEFASTHttpsPort()')
    print('  void SetEFASTHttpsPort(i32 httpsPort)')
    print('  bool CheckLocalPortAvavaiableForNginx(i32 port)')
    print('  void SetEossHostName(string host)')
    print('  string GetEossHostName()')
    print('  void SetSysCSFLevel(i32 level)')
    print('  i32 GetSysCSFLevel()')
    print('  void InitCSFLevels( csflevels)')
    print('   GetCSFLevels()')
    print('  i32 GetMaxCSFLevel()')
    print('  void Usrm_SetSystemFindShareStatus(bool status)')
    print('  bool Usrm_GetSystemFindShareStatus()')
    print('  string Usrm_AddFindShareInfo(ncTFindShareInfo shareInfo)')
    print('  void Usrm_DeleteFindShareInfo(string sharerId)')
    print('  i64 Usrm_GetFindShareInfoCnt()')
    print('   Usrm_GetFindShareInfoByPage(i32 start, i32 limit)')
    print('   Usrm_SearchFindShareInfo(i32 start, i32 limit, string searchKey)')
    print('  void Usrm_SetSystemLinkShareStatus(bool status)')
    print('  bool Usrm_GetSystemLinkShareStatus()')
    print('  string Usrm_AddLinkShareInfo(ncTLinkShareInfo shareInfo)')
    print('  void Usrm_DeleteLinkShareInfo(string sharerId)')
    print('  i64 Usrm_GetLinkShareInfoCnt()')
    print('   Usrm_GetLinkShareInfoByPage(i32 start, i32 limit)')
    print('   Usrm_SearchLinkShareInfo(i32 start, i32 limit, string searchKey)')
    print('  void Usrm_SetSystemPermShareStatus(bool status)')
    print('  bool Usrm_GetSystemPermShareStatus()')
    print('  string Usrm_AddPermShareInfo(ncTPermShareInfo shareInfo)')
    print('  void Usrm_EditPermShareInfo(ncTPermShareInfo shareInfo)')
    print('  void Usrm_DeletePermShareInfo(string strategyId)')
    print('  void Usrm_SetPermShareInfoStatus(string strategyId, bool status)')
    print('  i64 Usrm_GetPermShareInfoCnt()')
    print('   Usrm_GetPermShareInfoByPage(i32 start, i32 limit)')
    print('   Usrm_SearchPermShareInfo(i32 start, i32 limit, string searchKey)')
    print('  bool Usrm_GetDefaulStrategySuperimStatus()')
    print('  void Usrm_SetDefaulStrategySuperimStatus(bool status)')
    print('  void SetLeakProofStatus(bool status)')
    print('  bool GetLeakProofStatus()')
    print('  i64 AddLeakProofStrategy(ncTAddLeakProofStrategyParam param)')
    print('  void EditLeakProofStrategy(ncTEditLeakProofStrategyParam param)')
    print('  void DeleteLeakProofStrategy(i64 strategyId)')
    print('  i64 GetLeakProofStrategyCount()')
    print('   GetLeakProofStrategyInfosByPage(i32 start, i32 limit)')
    print('  i64 SearchLeakProofStrategyCount(string key)')
    print('   SearchLeakProofStrategyInfosByPage(string key, i32 start, i32 limit)')
    print('  string Usrm_UserLogin(string userName, string newPassword, ncTUserLoginOption option)')
    print('  ncTNTLMResponse Usrm_UserLoginByNTLMV1(string account, string challenge, string password)')
    print('  ncTNTLMResponse Usrm_UserLoginByNTLMV2(string account, string domain, string challenge, string password)')
    print('  string Usrm_Login(string userName, string password, ncTUsrmAuthenType authenType, ncTUserLoginOption option, string osType)')
    print('  string Usrm_ValidateThirdParty(string params)')
    print('  string Usrm_LoginConsoleByThirdParty(string params)')
    print('  void Usrm_LoginConsoleByTokenId(string userId, string tokenId, ncTUserLoginOption option)')
    print('  string Usrm_GetLoginClientInfo(string userId)')
    print('  void Usrm_SetVcodeConfig(ncTVcodeConfig vcodeconfig)')
    print('  ncTVcodeConfig Usrm_GetVcodeConfig()')
    print('  ncTVcodeCreateInfo Usrm_CreateVcodeInfo(string uuidIn, ncTVcodeType vcodeType)')
    print('  ncTReturnInfo Usrm_SendAuthVcode(string userId, ncTVcodeType vcodeType, string oldTelnum)')
    print('  string Usrm_LoginConsoleByThirdPartyNew(string params)')
    print('  string Usrm_CheckConsoleUserPassword(string userName, string password, ncTUsrmAuthenType authenType, ncTUserLoginOption option)')
    print('  i32 GetClearCacheInterval()')
    print('  void SetClearCacheInterval(i32 interval)')
    print('  i64 GetClearCacheQuota()')
    print('  void SetClearCacheQuota(i64 size)')
    print('  void SetForceClearCacheStatus(bool status)')
    print('  bool GetForceClearCacheStatus()')
    print('  void SetHideClientCacheSettingStatus(bool status)')
    print('  bool GetHideClientCacheSettingStatus()')
    print('  void SetLoginStrategyStatus(bool status)')
    print('  bool GetLoginStrategyStatus()')
    print('  bool GetOSTypeForbidLoginStatus(ncTDeviceOsType loginOSType)')
    print('  void SetBatchOSTypeForbidLoginInfo( info)')
    print('   GetAllOSTypeForbidLoginInfo()')
    print('  void UploadClientUpdatePackage(string packagePath)')
    print('  void DeleteClientUpdatePackage(i16 osType)')
    print('   GetClientUpdatePackage()')
    print('  string GetClientUpdatePackageURL(i16 osType, string reqHost, bool useHttps)')
    print('  ncTClientPackageInfo GetClientUpdatePackageInfo(i32 osType)')
    print('  void EditClientUpdatePackageMode(i32 osType, bool mode)')
    print('  void SetClientUpdatePackageDownloadInfo(string name, string url)')
    print('  void SetMultiTenantStatus(bool status)')
    print('  bool GetMultiTenantStatus()')
    print('  string Usrm_AddThirdApp(string apppid)')
    print('  void Usrm_SetThirdAppStatus(string appid, bool status)')
    print('  string Usrm_GenThirdAppSign(string appid, string appkey, string method, string body)')
    print('  void Usrm_CheckThirdAppSign(string appid, string method, string body, string sign)')
    print('  void Auditm_SetPolicyStatus(bool status)')
    print('  bool Auditm_GetPolicyStatus()')
    print('   Auditm_GetAuditorIds(string docId, ncTAuditType type)')
    print('  bool Auditm_IsAuditor(string userId)')
    print('  void AuditWhiteListm_AddDepartments( departIds)')
    print('   AuditWhiteListm_Search(i32 start, i32 limit, string searchKey)')
    print('  i32 AuditWhiteListm_SearchCount(string searchKey)')
    print('   AuditWhiteListm_GetInfosByPage(i32 start, i32 limit)')
    print('  i32 AuditWhiteListm_GetInfosCount()')
    print('  void AuditWhiteListm_DelDepartment(string departmentId)')
    print('  void AuditWhiteListm_SetCSFLevel(i32 level)')
    print('  i32 AuditWhiteListm_GetCSFLevel()')
    print('  void AuditWhiteListm_SetDepartmentStatus(string departmentId, bool status)')
    print('  bool AuditWhiteListm_CheckAuditFree( departIds)')
    print('  bool AuditWhiteListm_GetDepartmentStatus(string departId)')
    print('  ncTThirdPartyToolConfig GetThirdPartyToolConfig(string thirdPartyToolId)')
    print('  void SetThirdPartyToolConfig(ncTThirdPartyToolConfig thirdPartyToolConfig)')
    print('  bool TestThirdPartyToolConfig(string url)')
    print('  string GetAnyRobotURL(string host, string account)')
    print('  string GetSiteOfficeOnlineInfo(string siteName)')
    print('  void SetSiteOfficeOnlineInfo(string siteName, string info)')
    print('  void Usrm_AddNetAccessorsInfo(ncTNetAccessorsInfo netAccessorsInfo)')
    print('  void Usrm_EditNetAccessorsInfo(ncTNetAccessorsInfo netAccessorsInfo)')
    print('  void Usrm_DeleteNetAccessorsInfo(string netAccessorsId)')
    print('   Usrm_GetNet()')
    print('   Usrm_SearchNet(string ip)')
    print('   Usrm_GetAccessors(string netAccessorsId)')
    print('   Usrm_SearchAccessors(string netAccessorsId, string name)')
    print('  ncTUserLoginAccessControl Usrm_SearchLoginAccessControlByName(string name)')
    print('  bool Usrm_CheckLoginIp(string userId, string loginIp)')
    print('  void Usrm_SetPriorityAccessTabStatus(bool stauts)')
    print('  bool Usrm_GetPriorityAccessTabStatus()')
    print('  void Usrm_SetPriorityAccessConfig(ncTPriorityAccessConfig config)')
    print('  ncTPriorityAccessConfig Usrm_GetPriorityAccessConfig()')
    print('  void Usrm_SetPriorityAccessLocalCacheStatus(bool status)')
    print('  string DocAuditm_CreateProcess(ncTDocAuditInfo docAuditInfo)')
    print('  void DocAuditm_EditProcess(ncTDocAuditInfo editParam, string editorId)')
    print('  void DocAuditm_DeleteProcess(string processId)')
    print('   DocAuditm_GetAllProcessInfo(string userId)')
    print('   DocAuditm_SearchProcessInfoByName(string userId, string searchKey)')
    print('   DocAuditm_GetAllAuditorInfos(string userId)')
    print('   DocAuditm_SearchAuditor(string userId, string name)')
    print('  ncTDocAuditInfo DocAuditm_GetProcessById(string processId)')
    print('  string DocAuditm_ConvertDocName(string gns)')
    print('   DocAuditm_GetScopedProcessInfo(string userId)')
    print('  bool DocAuditm_CheckProcessScope(string userId, string processId)')
    print('  string ExtApp_GetInfo(string params, string userId)')
    print('  bool Secretm_GetStatus()')
    print('  void DocExchangem_SetStatus(bool status)')
    print('  bool DocExchangem_GetStatus()')
    print('  string DocExchangem_GetSendKey()')
    print('  string DocExchangem_SetSendKey()')
    print('  bool DocExchangem_GetAuditStatus()')
    print('  void DocExchangem_SetAuditStatus(bool status)')
    print('  void DocExchangem_SetLimitStatus(bool status)')
    print('  bool DocExchangem_GetLimitStatus()')
    print('  void DocExchangem_Set( params, ncTDocExchangeLimitType limitType)')
    print('   DocExchangem_Get(i32 start, i32 limit, ncTDocExchangeLimitType limitType)')
    print('  i32 DocExchangem_GetCnts(ncTDocExchangeLimitType limitType)')
    print('   DocExchangem_Search(i32 start, i32 limit, string searchKey, ncTDocExchangeLimitType limitType)')
    print('  i32 DocExchangem_SearchCnts(string searchKey, ncTDocExchangeLimitType limitType)')
    print('  void DocExchangem_Delete(string objId, ncTDocExchangeLimitType limitType)')
    print('  bool DocExchangem_CheckLimitScope(string objId, ncTDocExchangeLimitType limitType)')
    print('  void DocExchangem_RegisterService()')
    print('  string DocExchangem_GetServiceIp()')
    print('  void DocExchangem_SetSyncOuConfig(bool isEnable, i32 intervalTime)')
    print('  bool DocExchangem_GetAutoStatus()')
    print('  void DocExchangem_SetAutoStatus(bool status)')
    print('  bool DocExchangem_GetDelFileStatus()')
    print('  void DocExchangem_SetDelFileStatus(bool status)')
    print('  bool DocExchangem_GetLibSyncStatus()')
    print('  void DocExchangem_SetLibSyncStatus(bool status)')
    print('  bool DocExchangem_GetEncryptStatus()')
    print('  void DocExchangem_SetEncryptStatus(bool status)')
    print('  bool DocExchangem_GetAutoRecvStatus()')
    print('  void DocExchangem_SetAutoRecvStatus(bool status)')
    print('  string DocExchangem_AddRecvArea(ncTDocExchangeRecvArea param)')
    print('   DocExchangem_GetRecvAreas()')
    print('  void DocExchangem_DeleteRecvArea(string recvAreaId)')
    print('  void DocExchangem_ModifyRecvArea(ncTDocExchangeRecvArea param)')
    print('  string DocExchangem_ExportDocName()')
    print('  void DocExchangem_ImportRecvAreaDocName(string recvAreaId, string importInfo, string content)')
    print('  void DocExchangem_DelRecvAreaDocName(string recvAreaId)')
    print('  bool DocExchangem_GetManualToInboxStatus()')
    print('  void DocExchangem_SetManualToInboxStatus(bool status)')
    print('  void DocExchangem_SetLibSyncLimitStatus(bool status)')
    print('  bool DocExchangem_GetLibSyncLimitStatus()')
    print('  void NAS_Active()')
    print('  void NAS_Deactive()')
    print('   NAS_GetNodeList()')
    print('   NAS_ListMountPoints()')
    print('  void NAS_AddMountPoint(string MountName, string path)')
    print('  void NAS_DelMountPoint(string MountName)')
    print('  bool NAS_CheckService()')
    print('  void NAS_LocalAddMountPoint(string MountName, string path)')
    print('  void NAS_LocalDelMountPoint(string MountName)')
    print('  void NAS_OnDelLincense()')
    print('  void Usrm_SetSystemInvitationShareStatus(bool status)')
    print('  bool Usrm_GetSystemInvitationShareStatus()')
    print('  string Usrm_AddLimitRateInfo(ncTLimitRateInfo info)')
    print('  void Usrm_EditLimitRateInfo(ncTLimitRateInfo info)')
    print('  void Usrm_DeleteLimitRateInfo(string id, ncTLimitRateType limitType)')
    print('  i64 Usrm_GetLimitRateInfoCnt(ncTLimitRateType limitType)')
    print('   Usrm_GetLimitRateInfoByPage(i32 start, i32 limit, ncTLimitRateType limitType)')
    print('   Usrm_SearchLimitRateInfoByPage(string searchKey, i32 start, i32 limit, ncTLimitRateType limitType)')
    print('  i64 Usrm_SearchLimitRateInfoCnt(string searchKey, ncTLimitRateType limitType)')
    print('  void Usrm_SetLimitRateConfig(ncTLimitRateConfig conf)')
    print('  ncTLimitRateConfig Usrm_GetLimitRateConfig()')
    print('  ncTLimitRateObjInfo Usrm_GetExistObjectInfo( userInfos,  depInfos, ncTLimitRateType limitType, string limitId)')
    print('  void SetThirdCSFSysConfig(ncTThirdCSFSysConfig config)')
    print('  ncTThirdCSFSysConfig GetThirdCSFSysConfig()')
    print('  string GetDocWatermarkConfig()')
    print('  void SetDocWatermarkConfig(string config)')
    print('  void AddWatermarkDoc(string id, i32 watermarkType)')
    print('  void UpdateWatermarkDoc(string id, i32 watermarkType)')
    print('   GetWatermarkDocs()')
    print('  void DeleteWatermarkDoc(string id)')
    print('  i64 GetWatermarkDocCnt()')
    print('   GetWatermarkDocByPage(i32 start, i32 limit)')
    print('  i64 SearchWatermarkDocCnt(string searchKey)')
    print('   SearchWatermarkDocByPage(string searchKey, i32 start, i32 limit)')
    print('   AddLinkTemplate(ncTLinkTemplateInfo templateInfo)')
    print('  void DeleteLinkTemplate(string templateId)')
    print('   EditLinkTemplate(ncTLinkTemplateInfo templateInfo)')
    print('   GetLinkTemplate(i32 templateType)')
    print('   SearchLinkTemplate(i32 templateType, string key)')
    print('  ncTLinkTemplateInfo GetCalculatedLinkTemplateBySharerId(i32 templateType, string userId)')
    print('  void CheckExternalLinkPerm(ncTExternalLinkInfo linkInfo)')
    print('  void DocLimitm_SetStatus(bool status)')
    print('  bool DocLimitm_GetStatus()')
    print('  void DocLimitm_AddNet(ncTNetInfo netInfo)')
    print('  void DocLimitm_EditNet(ncTNetInfo netInfo)')
    print('  void DocLimitm_DeleteNet(string netId)')
    print('   DocLimitm_GetNet()')
    print('   DocLimitm_SearchNet(string ip)')
    print('  void DocLimitm_AddDocs(string netId,  docId)')
    print('  void DocLimitm_DeleteDocs(string netId, string docId)')
    print('   DocLimitm_GetDocs(string netId)')
    print('   DocLimitm_SearchDocs(string netId, string name)')
    print('   DocLimitm_GetNetByDocId(string docId)')
    print('  string Usrm_AddDocDownloadLimitInfo(ncTDocDownloadLimitInfo info)')
    print('  void Usrm_EditDocDownloadLimitObject(string id,  userInfos,  depInfos)')
    print('  void Usrm_EditDocDownloadLimitValue(string id, i64 limitValue)')
    print('  void Usrm_DeleteDocDownloadLimitInfo(string id)')
    print('  i64 Usrm_GetDocDownloadLimitInfoCnt()')
    print('   Usrm_GetDocDownloadLimitInfoByPage(i32 start, i32 limit)')
    print('   Usrm_SearchDocDownloadLimitInfoByPage(string searchKey, i32 start, i32 limit)')
    print('  i64 Usrm_SearchDocDownloadLimitInfoCnt(string searchKey)')
    print('  i64 Usrm_GetUserDocDownloadLimitValue(string userId)')
    print('  void Usrm_SetDDLEmailNotifyStatus(bool status)')
    print('  bool Usrm_GetDDLEmailNotifyStatus()')
    print('  bool GetShareDocStatus(ncTDocType docType, ncTTemplateType linkType)')
    print('  void SetShareDocStatus(ncTDocType docType, ncTTemplateType linkType, bool status)')
    print('  bool GetRetainFileStatus()')
    print('  void SetHideUserInfoStatus(bool status)')
    print('  bool GetHideUserInfoStatus()')
    print('  void HideOum_SetStatus(bool status)')
    print('  bool HideOum_GetStatus()')
    print('  void HideOum_Add( departmentIds)')
    print('   HideOum_Get()')
    print('   HideOum_Search(string searchKey)')
    print('  void HideOum_Delete(string departmentId)')
    print('  bool HideOum_Check(string userId)')
    print('  void SetSearchUserConfig(ncTSearchUserConfig config)')
    print('  ncTSearchUserConfig GetSearchUserConfig()')
    print('  void SetCsfLevelAuditStatus(bool status)')
    print('  bool GetCsfLevelAuditStatus()')
    print('  void SetRetainOutLinkStatus(bool status)')
    print('  bool GetRetainOutLinkStatus()')
    print('   Devicem_SearchUsersBindStatus(ncTBindStatusSearchScope scope, string searchKey, i32 start, i32 limit)')
    print('  i64 Devicem_SearchUsersBindStatusCnt(ncTBindStatusSearchScope scope, string searchKey)')
    print('   GetAllAntivirusAdmin()')
    print('  void AddAntivirusAdmin(string loginName)')
    print('  void SetExportWithPassWordStatus(bool status)')
    print('  bool GetExportWithPassWordStatus()')
    print('  string ExportActiveLog(string name, string pwd, i64 logCount, ncTExportLogParam param)')
    print('  string ExportHistoryLog(string logId, i64 validSeconds, string pwd)')
    print('  string GetCompressFileInfo(string taskId)')
    print('  bool GetGenCompressFileStatus(string taskId)')
    print('  void SetRecycleInfo(ncTRecycleInfo info, string cid)')
    print('  ncTRecycleInfo GetRecycleInfo(string cid)')
    print('  void DelRecycleInfo(string cid)')
    print('   GetRecycleInfos()')
    print('  string SMS_GetConfig()')
    print('  void SMS_SetConfig(string config)')
    print('  void SMS_Test(string config)')
    print('  void SMS_SendVcode(string account, string password, string telNumber)')
    print('  string SMS_Activate(string account, string password, string telNumber, string mailAddress, string verifyCode)')
    print('  ncTActiveReportInfo GetActiveReportMonth(string inquireDate)')
    print('  ncTActiveReportInfo GetActiveReportYear(string inquireDate)')
    print('  string ExportActiveReportMonth(string name, string inquireDate)')
    print('  string ExportActiveReportYear(string name, string inquireDate)')
    print('  bool GetGenActiveReportStatus(string taskId)')
    print('  string GetActiveReportFileInfo(string taskId)')
    print('  void SetActiveReportNotifyStatus(bool status)')
    print('  bool GetActiveReportNotifyStatus()')
    print('  void SetEisooRecipientEmail( emailList)')
    print('   GetEisooRecipientEmail()')
    print('  string UsrRolem_Add(ncTRoleInfo roleInfo)')
    print('   UsrRolem_Get(string userId)')
    print('  void UsrRolem_Edit(string userId, ncTRoleInfo roleInfo)')
    print('  void UsrRolem_Delete(string userId, string roleId)')
    print('  void UsrRolem_SetMember(string userId, string roleId, ncTRoleMemberInfo memberInfo)')
    print('   UsrRolem_GetMember(string userId, string roleId)')
    print('   UsrRolem_SearchMember(string userId, string roleId, string name)')
    print('  void UsrRolem_DeleteMember(string userId, string roleId, string memberId)')
    print('   UsrRolem_GetRole(string userId)')
    print('  ncTRoleMemberInfo UsrRolem_GetMemberDetail(string userId, string roleId, string memberId)')
    print('   UsrRolem_GetSupervisoryRootOrg(string userId, string roleId)')
    print('   UsrRolem_SearchDepartments(string userId, string roleId, string searchKey, i32 start, i32 limit)')
    print('   UsrRolem_SearchSupervisoryUsers(string userId, string roleId, string key, i32 start, i32 limit)')
    print('   UsrRolem_GetMailListByRoleId(string roleId)')
    print('  bool UsrRolem_CheckMemberExist(string roleId, string memberId)')
    print('  void SetFileCrawlStatus(bool status)')
    print('  bool GetFileCrawlStatus()')
    print('  i32 AddFileCrawlConfig(ncTFileCrawlConfig fileCrawlConfig)')
    print('  void SetFileCrawlConfig(ncTFileCrawlConfig fileCrawlConfig)')
    print('  void DeleteFileCrawlConfig(i32 strategyId)')
    print('  i64 GetFileCrawlConfigCount()')
    print('   GetFileCrawlConfig(i32 start, i32 limit)')
    print('  i64 GetSearchFileCrawlConfigCount(string searchKey)')
    print('   SearchFileCrawlConfig(string searchKey, i32 start, i32 limit)')
    print('  ncTFileCrawlConfig GetFileCrawlConfigByUserId(string userId)')
    print('  void SetFileCrawlShowStatus(bool status)')
    print('  bool GetFileCrawlShowStatus()')
    print('  void SetDocAutoCleanStatus(bool status)')
    print('  bool GetDocAutoCleanStatus()')
    print('  void SetGlobalRecycleRetentionConfig(ncTGlobalRecycleRetentionConfig config)')
    print('  ncTGlobalRecycleRetentionConfig GetGlobalRecycleRetentionConfig()')
    print('  ncTAutoCleanConfig AddAutoCleanConfig(ncTAutoCleanConfig config)')
    print('  ncTAutoCleanConfig EditAutoCleanConfig(ncTAutoCleanConfig config)')
    print('  void DeleteAutoCleanConfig(string configId)')
    print('   SearchAutoCleanConfigByPage(i32 start, i32 limit, string searchKey)')
    print('  i64 GetAutoCleanConfigCount(string searchKey)')
    print('   GetAllAutoCleanUserId()')
    print('  ncTAutoCleanConfig GetAutoCleanConfigByUserId(string userId)')
    print('   StartScanVirusTask( userIds,  departIds,  cids)')
    print('  void StopScanVirusTask()')
    print('  void ContinueScanVirusTask()')
    print('  void CancelScanVirusTask()')
    print('  i64 GetVirusInfoCnt()')
    print('   GetVirusInfoByPage(i32 start, i32 limit)')
    print('  ncTScanTaskInfo GetScanVirusTaskResult()')
    print('  void SetGlobalVirusDB(ncTVirusDBInfo virusDB)')
    print('  void SetLocalVirusDB(ncTVirusDBInfo virusDB)')
    print('  ncTVirusDBInfo GetVirusDB()')
    print('  bool GetAntivirusOptionAuthStatus()')
    print('  void NotifyScanFinish()')
    print('  bool VirusFTPServerTest()')
    print('  void SetAntivirusWhiteList( cids)')
    print('   GetAntivirusWhiteList()')
    print('  void DeleteInvalidSlaveSiteVirusTask(string siteID)')
    print('  string GetVirusDBDownloadUrl()')
    print('  void SetVirusDBDownloadUrl(string virusDBDownloadUrl)')
    print('  string AddLocalSyncConfig(ncTLocalSyncConfig config)')
    print('  void EditLocalSyncConfig(ncTLocalSyncConfig config)')
    print('  void DeleteLocalSyncConfig(string strategyId)')
    print('  i64 GetLocalSyncConfigCount(string searchKey)')
    print('   SearchLocalSyncConfigByPage(i32 start, i32 limit, string searchKey)')
    print('  ncTLocalSyncConfig GetLocalSyncConfigByUserId(string userId)')
    print('  string ExportSpaceReport(string name, i32 objType)')
    print('  bool GetGenSpaceReportStatus(string taskId)')
    print('  string GetSpaceReportFilePath(string taskId)')
    print('  ncTWebhookConfig GetWebhookConfig()')
    print('  void SetWebhookConfig(ncTWebhookConfig config)')
    print('  bool TestWebhookConfig(string url)')
    print('  bool NeedQuickStart(string userId, i32 osType)')
    print('  void SetQuickStartStatus(string userId, bool status, i32 osType)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ncTShareMgnt.Client(protocol)
transport.open()

if cmd == 'Usrm_CreateOrganization':
    if len(args) != 1:
        print('Usrm_CreateOrganization requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CreateOrganization(eval(args[0]),))

elif cmd == 'Usrm_EditOrganization':
    if len(args) != 1:
        print('Usrm_EditOrganization requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditOrganization(eval(args[0]),))

elif cmd == 'Usrm_DeleteOrganization':
    if len(args) != 1:
        print('Usrm_DeleteOrganization requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteOrganization(args[0],))

elif cmd == 'Usrm_GetOrganizationById':
    if len(args) != 1:
        print('Usrm_GetOrganizationById requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetOrganizationById(args[0],))

elif cmd == 'Usrm_GetOrganizationByName':
    if len(args) != 1:
        print('Usrm_GetOrganizationByName requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetOrganizationByName(args[0],))

elif cmd == 'Usrm_GetSupervisoryRootOrg':
    if len(args) != 1:
        print('Usrm_GetSupervisoryRootOrg requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSupervisoryRootOrg(args[0],))

elif cmd == 'Usrm_GetRootOrgInfosByUserId':
    if len(args) != 1:
        print('Usrm_GetRootOrgInfosByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetRootOrgInfosByUserId(args[0],))

elif cmd == 'Usrm_AddDepartment':
    if len(args) != 1:
        print('Usrm_AddDepartment requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddDepartment(eval(args[0]),))

elif cmd == 'Usrm_EditDepartment':
    if len(args) != 1:
        print('Usrm_EditDepartment requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditDepartment(eval(args[0]),))

elif cmd == 'Usrm_DeleteDepartment':
    if len(args) != 2:
        print('Usrm_DeleteDepartment requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteDepartment(args[0], args[1],))

elif cmd == 'Usrm_GetDepartmentById':
    if len(args) != 1:
        print('Usrm_GetDepartmentById requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentById(args[0],))

elif cmd == 'Usrm_GetDepartmentByName':
    if len(args) != 1:
        print('Usrm_GetDepartmentByName requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentByName(args[0],))

elif cmd == 'Usrm_MoveDepartment':
    if len(args) != 2:
        print('Usrm_MoveDepartment requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_MoveDepartment(args[0], args[1],))

elif cmd == 'Usrm_GetSubDepartments':
    if len(args) != 1:
        print('Usrm_GetSubDepartments requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSubDepartments(args[0],))

elif cmd == 'Usrm_GetDepartmentOfUsersCount':
    if len(args) != 1:
        print('Usrm_GetDepartmentOfUsersCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentOfUsersCount(args[0],))

elif cmd == 'Usrm_GetDepartmentOfUsers':
    if len(args) != 3:
        print('Usrm_GetDepartmentOfUsers requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentOfUsers(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_AddUserToDepartment':
    if len(args) != 2:
        print('Usrm_AddUserToDepartment requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddUserToDepartment(eval(args[0]), args[1],))

elif cmd == 'Usrm_MoveUserToDepartment':
    if len(args) != 3:
        print('Usrm_MoveUserToDepartment requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_MoveUserToDepartment(eval(args[0]), args[1], args[2],))

elif cmd == 'Usrm_RomoveUserFromDepartment':
    if len(args) != 2:
        print('Usrm_RomoveUserFromDepartment requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_RomoveUserFromDepartment(eval(args[0]), args[1],))

elif cmd == 'Usrm_SearchDepartmentOfUsers':
    if len(args) != 4:
        print('Usrm_SearchDepartmentOfUsers requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchDepartmentOfUsers(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'Usrm_CountSearchDepartmentOfUsers':
    if len(args) != 2:
        print('Usrm_CountSearchDepartmentOfUsers requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CountSearchDepartmentOfUsers(args[0], args[1],))

elif cmd == 'Usrm_SearchSupervisoryUsers':
    if len(args) != 4:
        print('Usrm_SearchSupervisoryUsers requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchSupervisoryUsers(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'Usrm_GetSupervisoryUsersUsedSpace':
    if len(args) != 1:
        print('Usrm_GetSupervisoryUsersUsedSpace requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSupervisoryUsersUsedSpace(args[0],))

elif cmd == 'Usrm_LocateUser':
    if len(args) != 2:
        print('Usrm_LocateUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_LocateUser(args[0], args[1],))

elif cmd == 'Usrm_CheckUserInDepart':
    if len(args) != 2:
        print('Usrm_CheckUserInDepart requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckUserInDepart(args[0], args[1],))

elif cmd == 'Usrm_EditDepartOSS':
    if len(args) != 2:
        print('Usrm_EditDepartOSS requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditDepartOSS(args[0], args[1],))

elif cmd == 'Usrm_SearchDepartments':
    if len(args) != 4:
        print('Usrm_SearchDepartments requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchDepartments(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'Usrm_GetDeepestDeparts':
    if len(args) != 1:
        print('Usrm_GetDeepestDeparts requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDeepestDeparts(args[0],))

elif cmd == 'Usrm_GetSupervisoryDeparts':
    if len(args) != 1:
        print('Usrm_GetSupervisoryDeparts requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSupervisoryDeparts(args[0],))

elif cmd == 'Usrm_GetOrgDepartmentById':
    if len(args) != 1:
        print('Usrm_GetOrgDepartmentById requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetOrgDepartmentById(args[0],))

elif cmd == 'Usrm_GetDepartmentByThirdId':
    if len(args) != 1:
        print('Usrm_GetDepartmentByThirdId requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentByThirdId(args[0],))

elif cmd == 'Usrm_GetDepartResponsiblePerson':
    if len(args) != 1:
        print('Usrm_GetDepartResponsiblePerson requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartResponsiblePerson(args[0],))

elif cmd == 'Usrm_GetDepartmentParentPath':
    if len(args) != 1:
        print('Usrm_GetDepartmentParentPath requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDepartmentParentPath(eval(args[0]),))

elif cmd == 'Usrm_SortDepartment':
    if len(args) != 3:
        print('Usrm_SortDepartment requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SortDepartment(args[0], args[1], args[2],))

elif cmd == 'Usrm_AddUser':
    if len(args) != 2:
        print('Usrm_AddUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddUser(eval(args[0]), args[1],))

elif cmd == 'Usrm_EditUser':
    if len(args) != 2:
        print('Usrm_EditUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditUser(eval(args[0]), args[1],))

elif cmd == 'Usrm_EditUserPriority':
    if len(args) != 2:
        print('Usrm_EditUserPriority requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditUserPriority(args[0], eval(args[1]),))

elif cmd == 'Usrm_DelUser':
    if len(args) != 1:
        print('Usrm_DelUser requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DelUser(args[0],))

elif cmd == 'Usrm_GetUserInfo':
    if len(args) != 1:
        print('Usrm_GetUserInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserInfo(args[0],))

elif cmd == 'Usrm_GetUserInfoByAccount':
    if len(args) != 1:
        print('Usrm_GetUserInfoByAccount requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserInfoByAccount(args[0],))

elif cmd == 'Usrm_GetUserIdByAccount':
    if len(args) != 1:
        print('Usrm_GetUserIdByAccount requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserIdByAccount(args[0],))

elif cmd == 'Usrm_GetAllUserCount':
    if len(args) != 0:
        print('Usrm_GetAllUserCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetAllUserCount())

elif cmd == 'Usrm_GetAllUsers':
    if len(args) != 2:
        print('Usrm_GetAllUsers requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetAllUsers(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_ModifyPassword':
    if len(args) != 4:
        print('Usrm_ModifyPassword requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ModifyPassword(args[0], args[1], args[2], eval(args[3]),))

elif cmd == 'Usrm_ResetPassword':
    if len(args) != 1:
        print('Usrm_ResetPassword requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ResetPassword(args[0],))

elif cmd == 'Usrm_ResetAllPassword':
    if len(args) != 1:
        print('Usrm_ResetAllPassword requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ResetAllPassword(args[0],))

elif cmd == 'Usrm_SetPasswordConfig':
    if len(args) != 1:
        print('Usrm_SetPasswordConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPasswordConfig(eval(args[0]),))

elif cmd == 'Usrm_GetPasswordConfig':
    if len(args) != 0:
        print('Usrm_GetPasswordConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPasswordConfig())

elif cmd == 'Usrm_SetUserStatus':
    if len(args) != 2:
        print('Usrm_SetUserStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetUserStatus(args[0], eval(args[1]),))

elif cmd == 'Usrm_SelfRegistration':
    if len(args) != 4:
        print('Usrm_SelfRegistration requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SelfRegistration(args[0], args[1], args[2], args[3],))

elif cmd == 'Usrm_EditUserSpace':
    if len(args) != 3:
        print('Usrm_EditUserSpace requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditUserSpace(args[0], eval(args[1]), args[2],))

elif cmd == 'Usrm_SetUserDocStatus':
    if len(args) != 1:
        print('Usrm_SetUserDocStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetUserDocStatus(eval(args[0]),))

elif cmd == 'Usrm_GetUserDocStatus':
    if len(args) != 0:
        print('Usrm_GetUserDocStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserDocStatus())

elif cmd == 'Usrm_SetDefaulSpaceSize':
    if len(args) != 1:
        print('Usrm_SetDefaulSpaceSize requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDefaulSpaceSize(eval(args[0]),))

elif cmd == 'Usrm_GetDefaulSpaceSize':
    if len(args) != 0:
        print('Usrm_GetDefaulSpaceSize requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDefaulSpaceSize())

elif cmd == 'Usrm_EditUserOSS':
    if len(args) != 2:
        print('Usrm_EditUserOSS requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditUserOSS(args[0], args[1],))

elif cmd == 'Usrm_EditLimitSpace':
    if len(args) != 3:
        print('Usrm_EditLimitSpace requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditLimitSpace(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_UpdateManagerDocSpace':
    if len(args) != 2:
        print('Usrm_UpdateManagerDocSpace requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_UpdateManagerDocSpace(args[0], eval(args[1]),))

elif cmd == 'Usrm_UpdateManagerUserSpace':
    if len(args) != 2:
        print('Usrm_UpdateManagerUserSpace requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_UpdateManagerUserSpace(args[0], eval(args[1]),))

elif cmd == 'Usrm_CheckHasEnoughSpace':
    if len(args) != 3:
        print('Usrm_CheckHasEnoughSpace requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckHasEnoughSpace(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_CheckSpaceByDeptId':
    if len(args) != 4:
        print('Usrm_CheckSpaceByDeptId requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckSpaceByDeptId(args[0], eval(args[1]), eval(args[2]), args[3],))

elif cmd == 'Usrm_CheckDocSpace':
    if len(args) != 2:
        print('Usrm_CheckDocSpace requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckDocSpace(args[0], eval(args[1]),))

elif cmd == 'Usrm_CheckUserSpace':
    if len(args) != 2:
        print('Usrm_CheckUserSpace requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckUserSpace(args[0], eval(args[1]),))

elif cmd == 'Usrm_ReCalcAdminLimitSpace':
    if len(args) != 0:
        print('Usrm_ReCalcAdminLimitSpace requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ReCalcAdminLimitSpace())

elif cmd == 'Usrm_GetSystemInitStatus':
    if len(args) != 0:
        print('Usrm_GetSystemInitStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSystemInitStatus())

elif cmd == 'Usrm_InitSystem':
    if len(args) != 0:
        print('Usrm_InitSystem requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_InitSystem())

elif cmd == 'Usrm_SetPwdControl':
    if len(args) != 2:
        print('Usrm_SetPwdControl requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPwdControl(args[0], eval(args[1]),))

elif cmd == 'Usrm_GetPwdControl':
    if len(args) != 1:
        print('Usrm_GetPwdControl requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPwdControl(args[0],))

elif cmd == 'Usrm_SetThirdPwdLock':
    if len(args) != 1:
        print('Usrm_SetThirdPwdLock requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetThirdPwdLock(eval(args[0]),))

elif cmd == 'Usrm_GetThirdPwdLock':
    if len(args) != 0:
        print('Usrm_GetThirdPwdLock requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetThirdPwdLock())

elif cmd == 'Usrm_GetTenantUsageStatistics':
    if len(args) != 1:
        print('Usrm_GetTenantUsageStatistics requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetTenantUsageStatistics(args[0],))

elif cmd == 'Usrm_SetAutoDisable':
    if len(args) != 1:
        print('Usrm_SetAutoDisable requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetAutoDisable(eval(args[0]),))

elif cmd == 'Usrm_GetAutoDisable':
    if len(args) != 0:
        print('Usrm_GetAutoDisable requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetAutoDisable())

elif cmd == 'Usrm_SetFreezeStatus':
    if len(args) != 1:
        print('Usrm_SetFreezeStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetFreezeStatus(eval(args[0]),))

elif cmd == 'Usrm_GetFreezeStatus':
    if len(args) != 0:
        print('Usrm_GetFreezeStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetFreezeStatus())

elif cmd == 'Usrm_SetUserFreezeStatus':
    if len(args) != 2:
        print('Usrm_SetUserFreezeStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetUserFreezeStatus(args[0], eval(args[1]),))

elif cmd == 'Usrm_SetRealNameAuthStatus':
    if len(args) != 1:
        print('Usrm_SetRealNameAuthStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetRealNameAuthStatus(eval(args[0]),))

elif cmd == 'Usrm_GetRealNameAuthStatus':
    if len(args) != 0:
        print('Usrm_GetRealNameAuthStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetRealNameAuthStatus())

elif cmd == 'Usrm_SetUserRealNameAuthStatus':
    if len(args) != 2:
        print('Usrm_SetUserRealNameAuthStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetUserRealNameAuthStatus(args[0], eval(args[1]),))

elif cmd == 'Usrm_EditAdminAccount':
    if len(args) != 2:
        print('Usrm_EditAdminAccount requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditAdminAccount(args[0], args[1],))

elif cmd == 'Usrm_GetUserInfoByThirdId':
    if len(args) != 1:
        print('Usrm_GetUserInfoByThirdId requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserInfoByThirdId(args[0],))

elif cmd == 'Usrm_CheckUserStatus':
    if len(args) != 1:
        print('Usrm_CheckUserStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckUserStatus(args[0],))

elif cmd == 'Usrm_SetUserExpireTime':
    if len(args) != 2:
        print('Usrm_SetUserExpireTime requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetUserExpireTime(args[0], eval(args[1]),))

elif cmd == 'Usrm_GetSiteUsedUserNum':
    if len(args) != 1:
        print('Usrm_GetSiteUsedUserNum requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSiteUsedUserNum(args[0],))

elif cmd == 'Usrm_GetTriSystemStatus':
    if len(args) != 0:
        print('Usrm_GetTriSystemStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetTriSystemStatus())

elif cmd == 'Usrm_SetTriSystemStatus':
    if len(args) != 1:
        print('Usrm_SetTriSystemStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetTriSystemStatus(eval(args[0]),))

elif cmd == 'Usrm_GetThirdPartyAuth':
    if len(args) != 0:
        print('Usrm_GetThirdPartyAuth requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetThirdPartyAuth())

elif cmd == 'AddThirdPartyAppConfig':
    if len(args) != 1:
        print('AddThirdPartyAppConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdPartyAppConfig(eval(args[0]),))

elif cmd == 'SetThirdPartyAppConfig':
    if len(args) != 1:
        print('SetThirdPartyAppConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetThirdPartyAppConfig(eval(args[0]),))

elif cmd == 'DeleteThirdPartyAppConfig':
    if len(args) != 1:
        print('DeleteThirdPartyAppConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteThirdPartyAppConfig(eval(args[0]),))

elif cmd == 'GetThirdPartyAppConfig':
    if len(args) != 1:
        print('GetThirdPartyAppConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdPartyAppConfig(eval(args[0]),))

elif cmd == 'SYNC_SyncToADOnce':
    if len(args) != 0:
        print('SYNC_SyncToADOnce requires 0 args')
        sys.exit(1)
    pp.pprint(client.SYNC_SyncToADOnce())

elif cmd == 'SYNC_StartSync':
    if len(args) != 2:
        print('SYNC_StartSync requires 2 args')
        sys.exit(1)
    pp.pprint(client.SYNC_StartSync(args[0], eval(args[1]),))

elif cmd == 'AddThirdSyncDBInfo':
    if len(args) != 1:
        print('AddThirdSyncDBInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdSyncDBInfo(eval(args[0]),))

elif cmd == 'GetThirdSyncDBInfo':
    if len(args) != 1:
        print('GetThirdSyncDBInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdSyncDBInfo(args[0],))

elif cmd == 'EditThirdSyncDBInfo':
    if len(args) != 1:
        print('EditThirdSyncDBInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditThirdSyncDBInfo(eval(args[0]),))

elif cmd == 'DeleteThirdSyncDBInfo':
    if len(args) != 1:
        print('DeleteThirdSyncDBInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteThirdSyncDBInfo(args[0],))

elif cmd == 'GetThirdDbTableInfos':
    if len(args) != 1:
        print('GetThirdDbTableInfos requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdDbTableInfos(args[0],))

elif cmd == 'DeleteThirdTableInfo':
    if len(args) != 1:
        print('DeleteThirdTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteThirdTableInfo(args[0],))

elif cmd == 'AddThirdDepartTableInfo':
    if len(args) != 1:
        print('AddThirdDepartTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdDepartTableInfo(eval(args[0]),))

elif cmd == 'EditThirdDepartTableInfo':
    if len(args) != 1:
        print('EditThirdDepartTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditThirdDepartTableInfo(eval(args[0]),))

elif cmd == 'AddThirdDepartRelationTableInfo':
    if len(args) != 1:
        print('AddThirdDepartRelationTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdDepartRelationTableInfo(eval(args[0]),))

elif cmd == 'EditThirdDepartRelationTableInfo':
    if len(args) != 1:
        print('EditThirdDepartRelationTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditThirdDepartRelationTableInfo(eval(args[0]),))

elif cmd == 'AddThirdUserTableInfo':
    if len(args) != 1:
        print('AddThirdUserTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdUserTableInfo(eval(args[0]),))

elif cmd == 'EditThirdUserTableInfo':
    if len(args) != 1:
        print('EditThirdUserTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditThirdUserTableInfo(eval(args[0]),))

elif cmd == 'AddThirdUserRelationTableInfo':
    if len(args) != 1:
        print('AddThirdUserRelationTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddThirdUserRelationTableInfo(eval(args[0]),))

elif cmd == 'EditThirdUserRelationTableInfo':
    if len(args) != 1:
        print('EditThirdUserRelationTableInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditThirdUserRelationTableInfo(eval(args[0]),))

elif cmd == 'SetThirdDbSyncConfig':
    if len(args) != 2:
        print('SetThirdDbSyncConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetThirdDbSyncConfig(args[0], eval(args[1]),))

elif cmd == 'GetThirdDbSyncConfig':
    if len(args) != 1:
        print('GetThirdDbSyncConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdDbSyncConfig(args[0],))

elif cmd == 'Usrm_ValidateSecurityDevice':
    if len(args) != 1:
        print('Usrm_ValidateSecurityDevice requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ValidateSecurityDevice(args[0],))

elif cmd == 'AddGlobalThirdPartyPlugin':
    if len(args) != 1:
        print('AddGlobalThirdPartyPlugin requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddGlobalThirdPartyPlugin(eval(args[0]),))

elif cmd == 'AddLocalThirdPartyPlugin':
    if len(args) != 1:
        print('AddLocalThirdPartyPlugin requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddLocalThirdPartyPlugin(eval(args[0]),))

elif cmd == 'PushMessageToThirdParty':
    if len(args) != 3:
        print('PushMessageToThirdParty requires 3 args')
        sys.exit(1)
    pp.pprint(client.PushMessageToThirdParty(args[0], eval(args[1]), args[2],))

elif cmd == 'PushMessageByPlugin':
    if len(args) != 2:
        print('PushMessageByPlugin requires 2 args')
        sys.exit(1)
    pp.pprint(client.PushMessageByPlugin(args[0], eval(args[1]),))

elif cmd == 'ThirdPartySendVcodeBySMSPluginExist':
    if len(args) != 0:
        print('ThirdPartySendVcodeBySMSPluginExist requires 0 args')
        sys.exit(1)
    pp.pprint(client.ThirdPartySendVcodeBySMSPluginExist())

elif cmd == 'GetThirdAuthTypeStatus':
    if len(args) != 1:
        print('GetThirdAuthTypeStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdAuthTypeStatus(eval(args[0]),))

elif cmd == 'Usrm_AddDomain':
    if len(args) != 1:
        print('Usrm_AddDomain requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddDomain(eval(args[0]),))

elif cmd == 'Usrm_EditDomain':
    if len(args) != 1:
        print('Usrm_EditDomain requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditDomain(eval(args[0]),))

elif cmd == 'Usrm_DeleteDomain':
    if len(args) != 1:
        print('Usrm_DeleteDomain requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteDomain(eval(args[0]),))

elif cmd == 'Usrm_GetAllDomains':
    if len(args) != 0:
        print('Usrm_GetAllDomains requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetAllDomains())

elif cmd == 'Usrm_GetDomainByName':
    if len(args) != 1:
        print('Usrm_GetDomainByName requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDomainByName(args[0],))

elif cmd == 'Usrm_GetDomainById':
    if len(args) != 1:
        print('Usrm_GetDomainById requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDomainById(eval(args[0]),))

elif cmd == 'Usrm_SetDomainStatus':
    if len(args) != 2:
        print('Usrm_SetDomainStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDomainStatus(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_ExpandDomainNode':
    if len(args) != 2:
        print('Usrm_ExpandDomainNode requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ExpandDomainNode(eval(args[0]), args[1],))

elif cmd == 'Usrm_SetDomainSyncStatus':
    if len(args) != 2:
        print('Usrm_SetDomainSyncStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDomainSyncStatus(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_GetDomainSyncStatus':
    if len(args) != 1:
        print('Usrm_GetDomainSyncStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDomainSyncStatus(eval(args[0]),))

elif cmd == 'Usrm_SetDomainConfig':
    if len(args) != 2:
        print('Usrm_SetDomainConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDomainConfig(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_GetDomainConfig':
    if len(args) != 1:
        print('Usrm_GetDomainConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDomainConfig(eval(args[0]),))

elif cmd == 'Usrm_SetDomainKeyConfig':
    if len(args) != 2:
        print('Usrm_SetDomainKeyConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDomainKeyConfig(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_GetDomainKeyConfig':
    if len(args) != 1:
        print('Usrm_GetDomainKeyConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDomainKeyConfig(eval(args[0]),))

elif cmd == 'Usrm_SetADSSOStatus':
    if len(args) != 1:
        print('Usrm_SetADSSOStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetADSSOStatus(eval(args[0]),))

elif cmd == 'Usrm_GetADSSOStatus':
    if len(args) != 0:
        print('Usrm_GetADSSOStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetADSSOStatus())

elif cmd == 'Usrm_CheckFailoverDomainAvailable':
    if len(args) != 1:
        print('Usrm_CheckFailoverDomainAvailable requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckFailoverDomainAvailable(eval(args[0]),))

elif cmd == 'Usrm_EditFailoverDomains':
    if len(args) != 2:
        print('Usrm_EditFailoverDomains requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditFailoverDomains(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_GetFailoverDomains':
    if len(args) != 1:
        print('Usrm_GetFailoverDomains requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetFailoverDomains(eval(args[0]),))

elif cmd == 'Usrm_ImportDomainUsers':
    if len(args) != 3:
        print('Usrm_ImportDomainUsers requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ImportDomainUsers(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_ImportDomainOUs':
    if len(args) != 3:
        print('Usrm_ImportDomainOUs requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ImportDomainOUs(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_GetImportProgress':
    if len(args) != 0:
        print('Usrm_GetImportProgress requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetImportProgress())

elif cmd == 'Usrm_ClearImportProgress':
    if len(args) != 0:
        print('Usrm_ClearImportProgress requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ClearImportProgress())

elif cmd == 'Usrm_GetThirdPartyRootNode':
    if len(args) != 1:
        print('Usrm_GetThirdPartyRootNode requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetThirdPartyRootNode(args[0],))

elif cmd == 'Usrm_ExpandThirdPartyNode':
    if len(args) != 1:
        print('Usrm_ExpandThirdPartyNode requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ExpandThirdPartyNode(args[0],))

elif cmd == 'Usrm_ImportThirdPartyOUs':
    if len(args) != 4:
        print('Usrm_ImportThirdPartyOUs requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ImportThirdPartyOUs(eval(args[0]), eval(args[1]), eval(args[2]), args[3],))

elif cmd == 'Usrm_ImportBatchUsers':
    if len(args) != 3:
        print('Usrm_ImportBatchUsers requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ImportBatchUsers(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_ExportBatchUsers':
    if len(args) != 2:
        print('Usrm_ExportBatchUsers requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ExportBatchUsers(eval(args[0]), args[1],))

elif cmd == 'Usrm_DownloadBatchUsers':
    if len(args) != 1:
        print('Usrm_DownloadBatchUsers requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DownloadBatchUsers(args[0],))

elif cmd == 'Usrm_DownloadImportFailedUsers':
    if len(args) != 0:
        print('Usrm_DownloadImportFailedUsers requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DownloadImportFailedUsers())

elif cmd == 'Usrm_GetProgress':
    if len(args) != 0:
        print('Usrm_GetProgress requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetProgress())

elif cmd == 'Usrm_GetErrorInfos':
    if len(args) != 2:
        print('Usrm_GetErrorInfos requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetErrorInfos(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_GetExportBatchUsersTaskStatus':
    if len(args) != 1:
        print('Usrm_GetExportBatchUsersTaskStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetExportBatchUsersTaskStatus(args[0],))

elif cmd == 'Usrm_CreatePersonGroup':
    if len(args) != 2:
        print('Usrm_CreatePersonGroup requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CreatePersonGroup(args[0], args[1],))

elif cmd == 'Usrm_DeletePersonGroup':
    if len(args) != 2:
        print('Usrm_DeletePersonGroup requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeletePersonGroup(args[0], args[1],))

elif cmd == 'Usrm_EditPersonGroup':
    if len(args) != 3:
        print('Usrm_EditPersonGroup requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditPersonGroup(args[0], args[1], args[2],))

elif cmd == 'Usrm_GetPersonGroups':
    if len(args) != 1:
        print('Usrm_GetPersonGroups requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPersonGroups(args[0],))

elif cmd == 'Usrm_AddPersonById':
    if len(args) != 3:
        print('Usrm_AddPersonById requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddPersonById(args[0], eval(args[1]), args[2],))

elif cmd == 'Usrm_DelPerson':
    if len(args) != 3:
        print('Usrm_DelPerson requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DelPerson(args[0], eval(args[1]), args[2],))

elif cmd == 'Usrm_GetPersonFromGroup':
    if len(args) != 4:
        print('Usrm_GetPersonFromGroup requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPersonFromGroup(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'Usrm_SearchPersonFromGroupByName':
    if len(args) != 2:
        print('Usrm_SearchPersonFromGroupByName requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchPersonFromGroupByName(args[0], args[1],))

elif cmd == 'Operm_GetCurrentOnlineUser':
    if len(args) != 0:
        print('Operm_GetCurrentOnlineUser requires 0 args')
        sys.exit(1)
    pp.pprint(client.Operm_GetCurrentOnlineUser())

elif cmd == 'Operm_GetMaxOnlineUserDay':
    if len(args) != 1:
        print('Operm_GetMaxOnlineUserDay requires 1 args')
        sys.exit(1)
    pp.pprint(client.Operm_GetMaxOnlineUserDay(args[0],))

elif cmd == 'Operm_GetMaxOnlineUserMonth':
    if len(args) != 2:
        print('Operm_GetMaxOnlineUserMonth requires 2 args')
        sys.exit(1)
    pp.pprint(client.Operm_GetMaxOnlineUserMonth(args[0], args[1],))

elif cmd == 'Operm_GetEarliestTime':
    if len(args) != 0:
        print('Operm_GetEarliestTime requires 0 args')
        sys.exit(1)
    pp.pprint(client.Operm_GetEarliestTime())

elif cmd == 'OEM_SetConfig':
    if len(args) != 1:
        print('OEM_SetConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.OEM_SetConfig(eval(args[0]),))

elif cmd == 'OEM_GetConfigBySection':
    if len(args) != 1:
        print('OEM_GetConfigBySection requires 1 args')
        sys.exit(1)
    pp.pprint(client.OEM_GetConfigBySection(args[0],))

elif cmd == 'OEM_GetConfigByOption':
    if len(args) != 2:
        print('OEM_GetConfigByOption requires 2 args')
        sys.exit(1)
    pp.pprint(client.OEM_GetConfigByOption(args[0], args[1],))

elif cmd == 'OEM_SetUninstallPwd':
    if len(args) != 1:
        print('OEM_SetUninstallPwd requires 1 args')
        sys.exit(1)
    pp.pprint(client.OEM_SetUninstallPwd(args[0],))

elif cmd == 'OEM_GetUninstallPwd':
    if len(args) != 0:
        print('OEM_GetUninstallPwd requires 0 args')
        sys.exit(1)
    pp.pprint(client.OEM_GetUninstallPwd())

elif cmd == 'OEM_GetUninstallPwdStatus':
    if len(args) != 0:
        print('OEM_GetUninstallPwdStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.OEM_GetUninstallPwdStatus())

elif cmd == 'OEM_CheckUninstallPwd':
    if len(args) != 1:
        print('OEM_CheckUninstallPwd requires 1 args')
        sys.exit(1)
    pp.pprint(client.OEM_CheckUninstallPwd(args[0],))

elif cmd == 'SetCustomConfigOfString':
    if len(args) != 2:
        print('SetCustomConfigOfString requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetCustomConfigOfString(args[0], args[1],))

elif cmd == 'SetCustomConfigOfInt64':
    if len(args) != 2:
        print('SetCustomConfigOfInt64 requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetCustomConfigOfInt64(args[0], eval(args[1]),))

elif cmd == 'SetCustomConfigOfBool':
    if len(args) != 2:
        print('SetCustomConfigOfBool requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetCustomConfigOfBool(args[0], eval(args[1]),))

elif cmd == 'GetCustomConfigOfString':
    if len(args) != 1:
        print('GetCustomConfigOfString requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCustomConfigOfString(args[0],))

elif cmd == 'GetCustomConfigOfInt64':
    if len(args) != 1:
        print('GetCustomConfigOfInt64 requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCustomConfigOfInt64(args[0],))

elif cmd == 'GetCustomConfigOfBool':
    if len(args) != 1:
        print('GetCustomConfigOfBool requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCustomConfigOfBool(args[0],))

elif cmd == 'SMTP_GetConfig':
    if len(args) != 0:
        print('SMTP_GetConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.SMTP_GetConfig())

elif cmd == 'SMTP_SetConfig':
    if len(args) != 1:
        print('SMTP_SetConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMTP_SetConfig(eval(args[0]),))

elif cmd == 'SMTP_ServerTest':
    if len(args) != 1:
        print('SMTP_ServerTest requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMTP_ServerTest(eval(args[0]),))

elif cmd == 'SMTP_ReceiverTest':
    if len(args) != 1:
        print('SMTP_ReceiverTest requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMTP_ReceiverTest(eval(args[0]),))

elif cmd == 'SMTP_SetAdminMailList':
    if len(args) != 2:
        print('SMTP_SetAdminMailList requires 2 args')
        sys.exit(1)
    pp.pprint(client.SMTP_SetAdminMailList(args[0], eval(args[1]),))

elif cmd == 'SMTP_GetAdminMailList':
    if len(args) != 1:
        print('SMTP_GetAdminMailList requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMTP_GetAdminMailList(args[0],))

elif cmd == 'Alarm_GetConfig':
    if len(args) != 0:
        print('Alarm_GetConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.Alarm_GetConfig())

elif cmd == 'Alarm_SetConfig':
    if len(args) != 1:
        print('Alarm_SetConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Alarm_SetConfig(eval(args[0]),))

elif cmd == 'NC_SendNotify':
    if len(args) != 2:
        print('NC_SendNotify requires 2 args')
        sys.exit(1)
    pp.pprint(client.NC_SendNotify(args[0], args[1],))

elif cmd == 'SMTP_Alarm_SetConfig':
    if len(args) != 1:
        print('SMTP_Alarm_SetConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMTP_Alarm_SetConfig(eval(args[0]),))

elif cmd == 'SMTP_Alarm_GetConfig':
    if len(args) != 0:
        print('SMTP_Alarm_GetConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.SMTP_Alarm_GetConfig())

elif cmd == 'SMTP_SendEmail':
    if len(args) != 3:
        print('SMTP_SendEmail requires 3 args')
        sys.exit(1)
    pp.pprint(client.SMTP_SendEmail(eval(args[0]), args[1], args[2],))

elif cmd == 'GetGlobalPort':
    if len(args) != 0:
        print('GetGlobalPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalPort())

elif cmd == 'SetGlobalPort':
    if len(args) != 2:
        print('SetGlobalPort requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalPort(eval(args[0]), eval(args[1]),))

elif cmd == 'SetHostName':
    if len(args) != 1:
        print('SetHostName requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetHostName(args[0],))

elif cmd == 'GetHostName':
    if len(args) != 0:
        print('GetHostName requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetHostName())

elif cmd == 'GetLocalPort':
    if len(args) != 0:
        print('GetLocalPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLocalPort())

elif cmd == 'SetLocalPort':
    if len(args) != 2:
        print('SetLocalPort requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetLocalPort(eval(args[0]), eval(args[1]),))

elif cmd == 'SetGlobalEOSSPort':
    if len(args) != 1:
        print('SetGlobalEOSSPort requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalEOSSPort(eval(args[0]),))

elif cmd == 'GetGlobalEOSSPort':
    if len(args) != 0:
        print('GetGlobalEOSSPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalEOSSPort())

elif cmd == 'SetLocalEOSSPort':
    if len(args) != 1:
        print('SetLocalEOSSPort requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLocalEOSSPort(eval(args[0]),))

elif cmd == 'GetLocalEOSSPort':
    if len(args) != 0:
        print('GetLocalEOSSPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLocalEOSSPort())

elif cmd == 'SetLocalCert':
    if len(args) != 4:
        print('SetLocalCert requires 4 args')
        sys.exit(1)
    pp.pprint(client.SetLocalCert(args[0], args[1], args[2], args[3],))

elif cmd == 'SetGlobalCert':
    if len(args) != 2:
        print('SetGlobalCert requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalCert(args[0], args[1],))

elif cmd == 'SetGlobalCertInternally':
    if len(args) != 0:
        print('SetGlobalCertInternally requires 0 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalCertInternally())

elif cmd == 'GetGlobalCertInfo':
    if len(args) != 0:
        print('GetGlobalCertInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalCertInfo())

elif cmd == 'SetOssGlobalCert':
    if len(args) != 2:
        print('SetOssGlobalCert requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetOssGlobalCert(args[0], args[1],))

elif cmd == 'SetOssGlobalCertInternally':
    if len(args) != 0:
        print('SetOssGlobalCertInternally requires 0 args')
        sys.exit(1)
    pp.pprint(client.SetOssGlobalCertInternally())

elif cmd == 'GetOssGlobalCertInfo':
    if len(args) != 0:
        print('GetOssGlobalCertInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetOssGlobalCertInfo())

elif cmd == 'SetGlobalClientHttpsStatus':
    if len(args) != 1:
        print('SetGlobalClientHttpsStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalClientHttpsStatus(eval(args[0]),))

elif cmd == 'SetGlobalConsoleHttpsStatus':
    if len(args) != 1:
        print('SetGlobalConsoleHttpsStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalConsoleHttpsStatus(eval(args[0]),))

elif cmd == 'GetGlobalClientHttpsStatus':
    if len(args) != 0:
        print('GetGlobalClientHttpsStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalClientHttpsStatus())

elif cmd == 'GetGlobalConsoleHttpsStatus':
    if len(args) != 0:
        print('GetGlobalConsoleHttpsStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalConsoleHttpsStatus())

elif cmd == 'GetEACPHttpsPort':
    if len(args) != 0:
        print('GetEACPHttpsPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetEACPHttpsPort())

elif cmd == 'SetEACPHttpsPort':
    if len(args) != 1:
        print('SetEACPHttpsPort requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetEACPHttpsPort(eval(args[0]),))

elif cmd == 'GetEFASTHttpsPort':
    if len(args) != 0:
        print('GetEFASTHttpsPort requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetEFASTHttpsPort())

elif cmd == 'SetEFASTHttpsPort':
    if len(args) != 1:
        print('SetEFASTHttpsPort requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetEFASTHttpsPort(eval(args[0]),))

elif cmd == 'CheckLocalPortAvavaiableForNginx':
    if len(args) != 1:
        print('CheckLocalPortAvavaiableForNginx requires 1 args')
        sys.exit(1)
    pp.pprint(client.CheckLocalPortAvavaiableForNginx(eval(args[0]),))

elif cmd == 'SetEossHostName':
    if len(args) != 1:
        print('SetEossHostName requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetEossHostName(args[0],))

elif cmd == 'GetEossHostName':
    if len(args) != 0:
        print('GetEossHostName requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetEossHostName())

elif cmd == 'SetSysCSFLevel':
    if len(args) != 1:
        print('SetSysCSFLevel requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetSysCSFLevel(eval(args[0]),))

elif cmd == 'GetSysCSFLevel':
    if len(args) != 0:
        print('GetSysCSFLevel requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetSysCSFLevel())

elif cmd == 'InitCSFLevels':
    if len(args) != 1:
        print('InitCSFLevels requires 1 args')
        sys.exit(1)
    pp.pprint(client.InitCSFLevels(eval(args[0]),))

elif cmd == 'GetCSFLevels':
    if len(args) != 0:
        print('GetCSFLevels requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetCSFLevels())

elif cmd == 'GetMaxCSFLevel':
    if len(args) != 0:
        print('GetMaxCSFLevel requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetMaxCSFLevel())

elif cmd == 'Usrm_SetSystemFindShareStatus':
    if len(args) != 1:
        print('Usrm_SetSystemFindShareStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetSystemFindShareStatus(eval(args[0]),))

elif cmd == 'Usrm_GetSystemFindShareStatus':
    if len(args) != 0:
        print('Usrm_GetSystemFindShareStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSystemFindShareStatus())

elif cmd == 'Usrm_AddFindShareInfo':
    if len(args) != 1:
        print('Usrm_AddFindShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddFindShareInfo(eval(args[0]),))

elif cmd == 'Usrm_DeleteFindShareInfo':
    if len(args) != 1:
        print('Usrm_DeleteFindShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteFindShareInfo(args[0],))

elif cmd == 'Usrm_GetFindShareInfoCnt':
    if len(args) != 0:
        print('Usrm_GetFindShareInfoCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetFindShareInfoCnt())

elif cmd == 'Usrm_GetFindShareInfoByPage':
    if len(args) != 2:
        print('Usrm_GetFindShareInfoByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetFindShareInfoByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_SearchFindShareInfo':
    if len(args) != 3:
        print('Usrm_SearchFindShareInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchFindShareInfo(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_SetSystemLinkShareStatus':
    if len(args) != 1:
        print('Usrm_SetSystemLinkShareStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetSystemLinkShareStatus(eval(args[0]),))

elif cmd == 'Usrm_GetSystemLinkShareStatus':
    if len(args) != 0:
        print('Usrm_GetSystemLinkShareStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSystemLinkShareStatus())

elif cmd == 'Usrm_AddLinkShareInfo':
    if len(args) != 1:
        print('Usrm_AddLinkShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddLinkShareInfo(eval(args[0]),))

elif cmd == 'Usrm_DeleteLinkShareInfo':
    if len(args) != 1:
        print('Usrm_DeleteLinkShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteLinkShareInfo(args[0],))

elif cmd == 'Usrm_GetLinkShareInfoCnt':
    if len(args) != 0:
        print('Usrm_GetLinkShareInfoCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLinkShareInfoCnt())

elif cmd == 'Usrm_GetLinkShareInfoByPage':
    if len(args) != 2:
        print('Usrm_GetLinkShareInfoByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLinkShareInfoByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_SearchLinkShareInfo':
    if len(args) != 3:
        print('Usrm_SearchLinkShareInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchLinkShareInfo(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_SetSystemPermShareStatus':
    if len(args) != 1:
        print('Usrm_SetSystemPermShareStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetSystemPermShareStatus(eval(args[0]),))

elif cmd == 'Usrm_GetSystemPermShareStatus':
    if len(args) != 0:
        print('Usrm_GetSystemPermShareStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSystemPermShareStatus())

elif cmd == 'Usrm_AddPermShareInfo':
    if len(args) != 1:
        print('Usrm_AddPermShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddPermShareInfo(eval(args[0]),))

elif cmd == 'Usrm_EditPermShareInfo':
    if len(args) != 1:
        print('Usrm_EditPermShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditPermShareInfo(eval(args[0]),))

elif cmd == 'Usrm_DeletePermShareInfo':
    if len(args) != 1:
        print('Usrm_DeletePermShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeletePermShareInfo(args[0],))

elif cmd == 'Usrm_SetPermShareInfoStatus':
    if len(args) != 2:
        print('Usrm_SetPermShareInfoStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPermShareInfoStatus(args[0], eval(args[1]),))

elif cmd == 'Usrm_GetPermShareInfoCnt':
    if len(args) != 0:
        print('Usrm_GetPermShareInfoCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPermShareInfoCnt())

elif cmd == 'Usrm_GetPermShareInfoByPage':
    if len(args) != 2:
        print('Usrm_GetPermShareInfoByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPermShareInfoByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_SearchPermShareInfo':
    if len(args) != 3:
        print('Usrm_SearchPermShareInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchPermShareInfo(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'Usrm_GetDefaulStrategySuperimStatus':
    if len(args) != 0:
        print('Usrm_GetDefaulStrategySuperimStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDefaulStrategySuperimStatus())

elif cmd == 'Usrm_SetDefaulStrategySuperimStatus':
    if len(args) != 1:
        print('Usrm_SetDefaulStrategySuperimStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDefaulStrategySuperimStatus(eval(args[0]),))

elif cmd == 'SetLeakProofStatus':
    if len(args) != 1:
        print('SetLeakProofStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLeakProofStatus(eval(args[0]),))

elif cmd == 'GetLeakProofStatus':
    if len(args) != 0:
        print('GetLeakProofStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLeakProofStatus())

elif cmd == 'AddLeakProofStrategy':
    if len(args) != 1:
        print('AddLeakProofStrategy requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddLeakProofStrategy(eval(args[0]),))

elif cmd == 'EditLeakProofStrategy':
    if len(args) != 1:
        print('EditLeakProofStrategy requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditLeakProofStrategy(eval(args[0]),))

elif cmd == 'DeleteLeakProofStrategy':
    if len(args) != 1:
        print('DeleteLeakProofStrategy requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteLeakProofStrategy(eval(args[0]),))

elif cmd == 'GetLeakProofStrategyCount':
    if len(args) != 0:
        print('GetLeakProofStrategyCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLeakProofStrategyCount())

elif cmd == 'GetLeakProofStrategyInfosByPage':
    if len(args) != 2:
        print('GetLeakProofStrategyInfosByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetLeakProofStrategyInfosByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'SearchLeakProofStrategyCount':
    if len(args) != 1:
        print('SearchLeakProofStrategyCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.SearchLeakProofStrategyCount(args[0],))

elif cmd == 'SearchLeakProofStrategyInfosByPage':
    if len(args) != 3:
        print('SearchLeakProofStrategyInfosByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.SearchLeakProofStrategyInfosByPage(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_UserLogin':
    if len(args) != 3:
        print('Usrm_UserLogin requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_UserLogin(args[0], args[1], eval(args[2]),))

elif cmd == 'Usrm_UserLoginByNTLMV1':
    if len(args) != 3:
        print('Usrm_UserLoginByNTLMV1 requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_UserLoginByNTLMV1(args[0], args[1], args[2],))

elif cmd == 'Usrm_UserLoginByNTLMV2':
    if len(args) != 4:
        print('Usrm_UserLoginByNTLMV2 requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_UserLoginByNTLMV2(args[0], args[1], args[2], args[3],))

elif cmd == 'Usrm_Login':
    if len(args) != 5:
        print('Usrm_Login requires 5 args')
        sys.exit(1)
    pp.pprint(client.Usrm_Login(args[0], args[1], eval(args[2]), eval(args[3]), args[4],))

elif cmd == 'Usrm_ValidateThirdParty':
    if len(args) != 1:
        print('Usrm_ValidateThirdParty requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_ValidateThirdParty(args[0],))

elif cmd == 'Usrm_LoginConsoleByThirdParty':
    if len(args) != 1:
        print('Usrm_LoginConsoleByThirdParty requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_LoginConsoleByThirdParty(args[0],))

elif cmd == 'Usrm_LoginConsoleByTokenId':
    if len(args) != 3:
        print('Usrm_LoginConsoleByTokenId requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_LoginConsoleByTokenId(args[0], args[1], eval(args[2]),))

elif cmd == 'Usrm_GetLoginClientInfo':
    if len(args) != 1:
        print('Usrm_GetLoginClientInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLoginClientInfo(args[0],))

elif cmd == 'Usrm_SetVcodeConfig':
    if len(args) != 1:
        print('Usrm_SetVcodeConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetVcodeConfig(eval(args[0]),))

elif cmd == 'Usrm_GetVcodeConfig':
    if len(args) != 0:
        print('Usrm_GetVcodeConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetVcodeConfig())

elif cmd == 'Usrm_CreateVcodeInfo':
    if len(args) != 2:
        print('Usrm_CreateVcodeInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CreateVcodeInfo(args[0], eval(args[1]),))

elif cmd == 'Usrm_SendAuthVcode':
    if len(args) != 3:
        print('Usrm_SendAuthVcode requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SendAuthVcode(args[0], eval(args[1]), args[2],))

elif cmd == 'Usrm_LoginConsoleByThirdPartyNew':
    if len(args) != 1:
        print('Usrm_LoginConsoleByThirdPartyNew requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_LoginConsoleByThirdPartyNew(args[0],))

elif cmd == 'Usrm_CheckConsoleUserPassword':
    if len(args) != 4:
        print('Usrm_CheckConsoleUserPassword requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckConsoleUserPassword(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'GetClearCacheInterval':
    if len(args) != 0:
        print('GetClearCacheInterval requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetClearCacheInterval())

elif cmd == 'SetClearCacheInterval':
    if len(args) != 1:
        print('SetClearCacheInterval requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetClearCacheInterval(eval(args[0]),))

elif cmd == 'GetClearCacheQuota':
    if len(args) != 0:
        print('GetClearCacheQuota requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetClearCacheQuota())

elif cmd == 'SetClearCacheQuota':
    if len(args) != 1:
        print('SetClearCacheQuota requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetClearCacheQuota(eval(args[0]),))

elif cmd == 'SetForceClearCacheStatus':
    if len(args) != 1:
        print('SetForceClearCacheStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetForceClearCacheStatus(eval(args[0]),))

elif cmd == 'GetForceClearCacheStatus':
    if len(args) != 0:
        print('GetForceClearCacheStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetForceClearCacheStatus())

elif cmd == 'SetHideClientCacheSettingStatus':
    if len(args) != 1:
        print('SetHideClientCacheSettingStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetHideClientCacheSettingStatus(eval(args[0]),))

elif cmd == 'GetHideClientCacheSettingStatus':
    if len(args) != 0:
        print('GetHideClientCacheSettingStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetHideClientCacheSettingStatus())

elif cmd == 'SetLoginStrategyStatus':
    if len(args) != 1:
        print('SetLoginStrategyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLoginStrategyStatus(eval(args[0]),))

elif cmd == 'GetLoginStrategyStatus':
    if len(args) != 0:
        print('GetLoginStrategyStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLoginStrategyStatus())

elif cmd == 'GetOSTypeForbidLoginStatus':
    if len(args) != 1:
        print('GetOSTypeForbidLoginStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSTypeForbidLoginStatus(eval(args[0]),))

elif cmd == 'SetBatchOSTypeForbidLoginInfo':
    if len(args) != 1:
        print('SetBatchOSTypeForbidLoginInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetBatchOSTypeForbidLoginInfo(eval(args[0]),))

elif cmd == 'GetAllOSTypeForbidLoginInfo':
    if len(args) != 0:
        print('GetAllOSTypeForbidLoginInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAllOSTypeForbidLoginInfo())

elif cmd == 'UploadClientUpdatePackage':
    if len(args) != 1:
        print('UploadClientUpdatePackage requires 1 args')
        sys.exit(1)
    pp.pprint(client.UploadClientUpdatePackage(args[0],))

elif cmd == 'DeleteClientUpdatePackage':
    if len(args) != 1:
        print('DeleteClientUpdatePackage requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteClientUpdatePackage(eval(args[0]),))

elif cmd == 'GetClientUpdatePackage':
    if len(args) != 0:
        print('GetClientUpdatePackage requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetClientUpdatePackage())

elif cmd == 'GetClientUpdatePackageURL':
    if len(args) != 3:
        print('GetClientUpdatePackageURL requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetClientUpdatePackageURL(eval(args[0]), args[1], eval(args[2]),))

elif cmd == 'GetClientUpdatePackageInfo':
    if len(args) != 1:
        print('GetClientUpdatePackageInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetClientUpdatePackageInfo(eval(args[0]),))

elif cmd == 'EditClientUpdatePackageMode':
    if len(args) != 2:
        print('EditClientUpdatePackageMode requires 2 args')
        sys.exit(1)
    pp.pprint(client.EditClientUpdatePackageMode(eval(args[0]), eval(args[1]),))

elif cmd == 'SetClientUpdatePackageDownloadInfo':
    if len(args) != 2:
        print('SetClientUpdatePackageDownloadInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetClientUpdatePackageDownloadInfo(args[0], args[1],))

elif cmd == 'SetMultiTenantStatus':
    if len(args) != 1:
        print('SetMultiTenantStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetMultiTenantStatus(eval(args[0]),))

elif cmd == 'GetMultiTenantStatus':
    if len(args) != 0:
        print('GetMultiTenantStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetMultiTenantStatus())

elif cmd == 'Usrm_AddThirdApp':
    if len(args) != 1:
        print('Usrm_AddThirdApp requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddThirdApp(args[0],))

elif cmd == 'Usrm_SetThirdAppStatus':
    if len(args) != 2:
        print('Usrm_SetThirdAppStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetThirdAppStatus(args[0], eval(args[1]),))

elif cmd == 'Usrm_GenThirdAppSign':
    if len(args) != 4:
        print('Usrm_GenThirdAppSign requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GenThirdAppSign(args[0], args[1], args[2], args[3],))

elif cmd == 'Usrm_CheckThirdAppSign':
    if len(args) != 4:
        print('Usrm_CheckThirdAppSign requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckThirdAppSign(args[0], args[1], args[2], args[3],))

elif cmd == 'Auditm_SetPolicyStatus':
    if len(args) != 1:
        print('Auditm_SetPolicyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Auditm_SetPolicyStatus(eval(args[0]),))

elif cmd == 'Auditm_GetPolicyStatus':
    if len(args) != 0:
        print('Auditm_GetPolicyStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Auditm_GetPolicyStatus())

elif cmd == 'Auditm_GetAuditorIds':
    if len(args) != 2:
        print('Auditm_GetAuditorIds requires 2 args')
        sys.exit(1)
    pp.pprint(client.Auditm_GetAuditorIds(args[0], eval(args[1]),))

elif cmd == 'Auditm_IsAuditor':
    if len(args) != 1:
        print('Auditm_IsAuditor requires 1 args')
        sys.exit(1)
    pp.pprint(client.Auditm_IsAuditor(args[0],))

elif cmd == 'AuditWhiteListm_AddDepartments':
    if len(args) != 1:
        print('AuditWhiteListm_AddDepartments requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_AddDepartments(eval(args[0]),))

elif cmd == 'AuditWhiteListm_Search':
    if len(args) != 3:
        print('AuditWhiteListm_Search requires 3 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_Search(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'AuditWhiteListm_SearchCount':
    if len(args) != 1:
        print('AuditWhiteListm_SearchCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_SearchCount(args[0],))

elif cmd == 'AuditWhiteListm_GetInfosByPage':
    if len(args) != 2:
        print('AuditWhiteListm_GetInfosByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_GetInfosByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'AuditWhiteListm_GetInfosCount':
    if len(args) != 0:
        print('AuditWhiteListm_GetInfosCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_GetInfosCount())

elif cmd == 'AuditWhiteListm_DelDepartment':
    if len(args) != 1:
        print('AuditWhiteListm_DelDepartment requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_DelDepartment(args[0],))

elif cmd == 'AuditWhiteListm_SetCSFLevel':
    if len(args) != 1:
        print('AuditWhiteListm_SetCSFLevel requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_SetCSFLevel(eval(args[0]),))

elif cmd == 'AuditWhiteListm_GetCSFLevel':
    if len(args) != 0:
        print('AuditWhiteListm_GetCSFLevel requires 0 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_GetCSFLevel())

elif cmd == 'AuditWhiteListm_SetDepartmentStatus':
    if len(args) != 2:
        print('AuditWhiteListm_SetDepartmentStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_SetDepartmentStatus(args[0], eval(args[1]),))

elif cmd == 'AuditWhiteListm_CheckAuditFree':
    if len(args) != 1:
        print('AuditWhiteListm_CheckAuditFree requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_CheckAuditFree(eval(args[0]),))

elif cmd == 'AuditWhiteListm_GetDepartmentStatus':
    if len(args) != 1:
        print('AuditWhiteListm_GetDepartmentStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.AuditWhiteListm_GetDepartmentStatus(args[0],))

elif cmd == 'GetThirdPartyToolConfig':
    if len(args) != 1:
        print('GetThirdPartyToolConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetThirdPartyToolConfig(args[0],))

elif cmd == 'SetThirdPartyToolConfig':
    if len(args) != 1:
        print('SetThirdPartyToolConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetThirdPartyToolConfig(eval(args[0]),))

elif cmd == 'TestThirdPartyToolConfig':
    if len(args) != 1:
        print('TestThirdPartyToolConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.TestThirdPartyToolConfig(args[0],))

elif cmd == 'GetAnyRobotURL':
    if len(args) != 2:
        print('GetAnyRobotURL requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetAnyRobotURL(args[0], args[1],))

elif cmd == 'GetSiteOfficeOnlineInfo':
    if len(args) != 1:
        print('GetSiteOfficeOnlineInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetSiteOfficeOnlineInfo(args[0],))

elif cmd == 'SetSiteOfficeOnlineInfo':
    if len(args) != 2:
        print('SetSiteOfficeOnlineInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetSiteOfficeOnlineInfo(args[0], args[1],))

elif cmd == 'Usrm_AddNetAccessorsInfo':
    if len(args) != 1:
        print('Usrm_AddNetAccessorsInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddNetAccessorsInfo(eval(args[0]),))

elif cmd == 'Usrm_EditNetAccessorsInfo':
    if len(args) != 1:
        print('Usrm_EditNetAccessorsInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditNetAccessorsInfo(eval(args[0]),))

elif cmd == 'Usrm_DeleteNetAccessorsInfo':
    if len(args) != 1:
        print('Usrm_DeleteNetAccessorsInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteNetAccessorsInfo(args[0],))

elif cmd == 'Usrm_GetNet':
    if len(args) != 0:
        print('Usrm_GetNet requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetNet())

elif cmd == 'Usrm_SearchNet':
    if len(args) != 1:
        print('Usrm_SearchNet requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchNet(args[0],))

elif cmd == 'Usrm_GetAccessors':
    if len(args) != 1:
        print('Usrm_GetAccessors requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetAccessors(args[0],))

elif cmd == 'Usrm_SearchAccessors':
    if len(args) != 2:
        print('Usrm_SearchAccessors requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchAccessors(args[0], args[1],))

elif cmd == 'Usrm_SearchLoginAccessControlByName':
    if len(args) != 1:
        print('Usrm_SearchLoginAccessControlByName requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchLoginAccessControlByName(args[0],))

elif cmd == 'Usrm_CheckLoginIp':
    if len(args) != 2:
        print('Usrm_CheckLoginIp requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_CheckLoginIp(args[0], args[1],))

elif cmd == 'Usrm_SetPriorityAccessTabStatus':
    if len(args) != 1:
        print('Usrm_SetPriorityAccessTabStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPriorityAccessTabStatus(eval(args[0]),))

elif cmd == 'Usrm_GetPriorityAccessTabStatus':
    if len(args) != 0:
        print('Usrm_GetPriorityAccessTabStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPriorityAccessTabStatus())

elif cmd == 'Usrm_SetPriorityAccessConfig':
    if len(args) != 1:
        print('Usrm_SetPriorityAccessConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPriorityAccessConfig(eval(args[0]),))

elif cmd == 'Usrm_GetPriorityAccessConfig':
    if len(args) != 0:
        print('Usrm_GetPriorityAccessConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetPriorityAccessConfig())

elif cmd == 'Usrm_SetPriorityAccessLocalCacheStatus':
    if len(args) != 1:
        print('Usrm_SetPriorityAccessLocalCacheStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetPriorityAccessLocalCacheStatus(eval(args[0]),))

elif cmd == 'DocAuditm_CreateProcess':
    if len(args) != 1:
        print('DocAuditm_CreateProcess requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_CreateProcess(eval(args[0]),))

elif cmd == 'DocAuditm_EditProcess':
    if len(args) != 2:
        print('DocAuditm_EditProcess requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_EditProcess(eval(args[0]), args[1],))

elif cmd == 'DocAuditm_DeleteProcess':
    if len(args) != 1:
        print('DocAuditm_DeleteProcess requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_DeleteProcess(args[0],))

elif cmd == 'DocAuditm_GetAllProcessInfo':
    if len(args) != 1:
        print('DocAuditm_GetAllProcessInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_GetAllProcessInfo(args[0],))

elif cmd == 'DocAuditm_SearchProcessInfoByName':
    if len(args) != 2:
        print('DocAuditm_SearchProcessInfoByName requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_SearchProcessInfoByName(args[0], args[1],))

elif cmd == 'DocAuditm_GetAllAuditorInfos':
    if len(args) != 1:
        print('DocAuditm_GetAllAuditorInfos requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_GetAllAuditorInfos(args[0],))

elif cmd == 'DocAuditm_SearchAuditor':
    if len(args) != 2:
        print('DocAuditm_SearchAuditor requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_SearchAuditor(args[0], args[1],))

elif cmd == 'DocAuditm_GetProcessById':
    if len(args) != 1:
        print('DocAuditm_GetProcessById requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_GetProcessById(args[0],))

elif cmd == 'DocAuditm_ConvertDocName':
    if len(args) != 1:
        print('DocAuditm_ConvertDocName requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_ConvertDocName(args[0],))

elif cmd == 'DocAuditm_GetScopedProcessInfo':
    if len(args) != 1:
        print('DocAuditm_GetScopedProcessInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_GetScopedProcessInfo(args[0],))

elif cmd == 'DocAuditm_CheckProcessScope':
    if len(args) != 2:
        print('DocAuditm_CheckProcessScope requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocAuditm_CheckProcessScope(args[0], args[1],))

elif cmd == 'ExtApp_GetInfo':
    if len(args) != 2:
        print('ExtApp_GetInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.ExtApp_GetInfo(args[0], args[1],))

elif cmd == 'Secretm_GetStatus':
    if len(args) != 0:
        print('Secretm_GetStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Secretm_GetStatus())

elif cmd == 'DocExchangem_SetStatus':
    if len(args) != 1:
        print('DocExchangem_SetStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetStatus':
    if len(args) != 0:
        print('DocExchangem_GetStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetStatus())

elif cmd == 'DocExchangem_GetSendKey':
    if len(args) != 0:
        print('DocExchangem_GetSendKey requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetSendKey())

elif cmd == 'DocExchangem_SetSendKey':
    if len(args) != 0:
        print('DocExchangem_SetSendKey requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetSendKey())

elif cmd == 'DocExchangem_GetAuditStatus':
    if len(args) != 0:
        print('DocExchangem_GetAuditStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetAuditStatus())

elif cmd == 'DocExchangem_SetAuditStatus':
    if len(args) != 1:
        print('DocExchangem_SetAuditStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetAuditStatus(eval(args[0]),))

elif cmd == 'DocExchangem_SetLimitStatus':
    if len(args) != 1:
        print('DocExchangem_SetLimitStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetLimitStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetLimitStatus':
    if len(args) != 0:
        print('DocExchangem_GetLimitStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetLimitStatus())

elif cmd == 'DocExchangem_Set':
    if len(args) != 2:
        print('DocExchangem_Set requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_Set(eval(args[0]), eval(args[1]),))

elif cmd == 'DocExchangem_Get':
    if len(args) != 3:
        print('DocExchangem_Get requires 3 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_Get(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'DocExchangem_GetCnts':
    if len(args) != 1:
        print('DocExchangem_GetCnts requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetCnts(eval(args[0]),))

elif cmd == 'DocExchangem_Search':
    if len(args) != 4:
        print('DocExchangem_Search requires 4 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_Search(eval(args[0]), eval(args[1]), args[2], eval(args[3]),))

elif cmd == 'DocExchangem_SearchCnts':
    if len(args) != 2:
        print('DocExchangem_SearchCnts requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SearchCnts(args[0], eval(args[1]),))

elif cmd == 'DocExchangem_Delete':
    if len(args) != 2:
        print('DocExchangem_Delete requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_Delete(args[0], eval(args[1]),))

elif cmd == 'DocExchangem_CheckLimitScope':
    if len(args) != 2:
        print('DocExchangem_CheckLimitScope requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_CheckLimitScope(args[0], eval(args[1]),))

elif cmd == 'DocExchangem_RegisterService':
    if len(args) != 0:
        print('DocExchangem_RegisterService requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_RegisterService())

elif cmd == 'DocExchangem_GetServiceIp':
    if len(args) != 0:
        print('DocExchangem_GetServiceIp requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetServiceIp())

elif cmd == 'DocExchangem_SetSyncOuConfig':
    if len(args) != 2:
        print('DocExchangem_SetSyncOuConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetSyncOuConfig(eval(args[0]), eval(args[1]),))

elif cmd == 'DocExchangem_GetAutoStatus':
    if len(args) != 0:
        print('DocExchangem_GetAutoStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetAutoStatus())

elif cmd == 'DocExchangem_SetAutoStatus':
    if len(args) != 1:
        print('DocExchangem_SetAutoStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetAutoStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetDelFileStatus':
    if len(args) != 0:
        print('DocExchangem_GetDelFileStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetDelFileStatus())

elif cmd == 'DocExchangem_SetDelFileStatus':
    if len(args) != 1:
        print('DocExchangem_SetDelFileStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetDelFileStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetLibSyncStatus':
    if len(args) != 0:
        print('DocExchangem_GetLibSyncStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetLibSyncStatus())

elif cmd == 'DocExchangem_SetLibSyncStatus':
    if len(args) != 1:
        print('DocExchangem_SetLibSyncStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetLibSyncStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetEncryptStatus':
    if len(args) != 0:
        print('DocExchangem_GetEncryptStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetEncryptStatus())

elif cmd == 'DocExchangem_SetEncryptStatus':
    if len(args) != 1:
        print('DocExchangem_SetEncryptStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetEncryptStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetAutoRecvStatus':
    if len(args) != 0:
        print('DocExchangem_GetAutoRecvStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetAutoRecvStatus())

elif cmd == 'DocExchangem_SetAutoRecvStatus':
    if len(args) != 1:
        print('DocExchangem_SetAutoRecvStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetAutoRecvStatus(eval(args[0]),))

elif cmd == 'DocExchangem_AddRecvArea':
    if len(args) != 1:
        print('DocExchangem_AddRecvArea requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_AddRecvArea(eval(args[0]),))

elif cmd == 'DocExchangem_GetRecvAreas':
    if len(args) != 0:
        print('DocExchangem_GetRecvAreas requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetRecvAreas())

elif cmd == 'DocExchangem_DeleteRecvArea':
    if len(args) != 1:
        print('DocExchangem_DeleteRecvArea requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_DeleteRecvArea(args[0],))

elif cmd == 'DocExchangem_ModifyRecvArea':
    if len(args) != 1:
        print('DocExchangem_ModifyRecvArea requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_ModifyRecvArea(eval(args[0]),))

elif cmd == 'DocExchangem_ExportDocName':
    if len(args) != 0:
        print('DocExchangem_ExportDocName requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_ExportDocName())

elif cmd == 'DocExchangem_ImportRecvAreaDocName':
    if len(args) != 3:
        print('DocExchangem_ImportRecvAreaDocName requires 3 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_ImportRecvAreaDocName(args[0], args[1], args[2],))

elif cmd == 'DocExchangem_DelRecvAreaDocName':
    if len(args) != 1:
        print('DocExchangem_DelRecvAreaDocName requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_DelRecvAreaDocName(args[0],))

elif cmd == 'DocExchangem_GetManualToInboxStatus':
    if len(args) != 0:
        print('DocExchangem_GetManualToInboxStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetManualToInboxStatus())

elif cmd == 'DocExchangem_SetManualToInboxStatus':
    if len(args) != 1:
        print('DocExchangem_SetManualToInboxStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetManualToInboxStatus(eval(args[0]),))

elif cmd == 'DocExchangem_SetLibSyncLimitStatus':
    if len(args) != 1:
        print('DocExchangem_SetLibSyncLimitStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_SetLibSyncLimitStatus(eval(args[0]),))

elif cmd == 'DocExchangem_GetLibSyncLimitStatus':
    if len(args) != 0:
        print('DocExchangem_GetLibSyncLimitStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocExchangem_GetLibSyncLimitStatus())

elif cmd == 'NAS_Active':
    if len(args) != 0:
        print('NAS_Active requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_Active())

elif cmd == 'NAS_Deactive':
    if len(args) != 0:
        print('NAS_Deactive requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_Deactive())

elif cmd == 'NAS_GetNodeList':
    if len(args) != 0:
        print('NAS_GetNodeList requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_GetNodeList())

elif cmd == 'NAS_ListMountPoints':
    if len(args) != 0:
        print('NAS_ListMountPoints requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_ListMountPoints())

elif cmd == 'NAS_AddMountPoint':
    if len(args) != 2:
        print('NAS_AddMountPoint requires 2 args')
        sys.exit(1)
    pp.pprint(client.NAS_AddMountPoint(args[0], args[1],))

elif cmd == 'NAS_DelMountPoint':
    if len(args) != 1:
        print('NAS_DelMountPoint requires 1 args')
        sys.exit(1)
    pp.pprint(client.NAS_DelMountPoint(args[0],))

elif cmd == 'NAS_CheckService':
    if len(args) != 0:
        print('NAS_CheckService requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_CheckService())

elif cmd == 'NAS_LocalAddMountPoint':
    if len(args) != 2:
        print('NAS_LocalAddMountPoint requires 2 args')
        sys.exit(1)
    pp.pprint(client.NAS_LocalAddMountPoint(args[0], args[1],))

elif cmd == 'NAS_LocalDelMountPoint':
    if len(args) != 1:
        print('NAS_LocalDelMountPoint requires 1 args')
        sys.exit(1)
    pp.pprint(client.NAS_LocalDelMountPoint(args[0],))

elif cmd == 'NAS_OnDelLincense':
    if len(args) != 0:
        print('NAS_OnDelLincense requires 0 args')
        sys.exit(1)
    pp.pprint(client.NAS_OnDelLincense())

elif cmd == 'Usrm_SetSystemInvitationShareStatus':
    if len(args) != 1:
        print('Usrm_SetSystemInvitationShareStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetSystemInvitationShareStatus(eval(args[0]),))

elif cmd == 'Usrm_GetSystemInvitationShareStatus':
    if len(args) != 0:
        print('Usrm_GetSystemInvitationShareStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetSystemInvitationShareStatus())

elif cmd == 'Usrm_AddLimitRateInfo':
    if len(args) != 1:
        print('Usrm_AddLimitRateInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddLimitRateInfo(eval(args[0]),))

elif cmd == 'Usrm_EditLimitRateInfo':
    if len(args) != 1:
        print('Usrm_EditLimitRateInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditLimitRateInfo(eval(args[0]),))

elif cmd == 'Usrm_DeleteLimitRateInfo':
    if len(args) != 2:
        print('Usrm_DeleteLimitRateInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteLimitRateInfo(args[0], eval(args[1]),))

elif cmd == 'Usrm_GetLimitRateInfoCnt':
    if len(args) != 1:
        print('Usrm_GetLimitRateInfoCnt requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLimitRateInfoCnt(eval(args[0]),))

elif cmd == 'Usrm_GetLimitRateInfoByPage':
    if len(args) != 3:
        print('Usrm_GetLimitRateInfoByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLimitRateInfoByPage(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_SearchLimitRateInfoByPage':
    if len(args) != 4:
        print('Usrm_SearchLimitRateInfoByPage requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchLimitRateInfoByPage(args[0], eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'Usrm_SearchLimitRateInfoCnt':
    if len(args) != 2:
        print('Usrm_SearchLimitRateInfoCnt requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchLimitRateInfoCnt(args[0], eval(args[1]),))

elif cmd == 'Usrm_SetLimitRateConfig':
    if len(args) != 1:
        print('Usrm_SetLimitRateConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetLimitRateConfig(eval(args[0]),))

elif cmd == 'Usrm_GetLimitRateConfig':
    if len(args) != 0:
        print('Usrm_GetLimitRateConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetLimitRateConfig())

elif cmd == 'Usrm_GetExistObjectInfo':
    if len(args) != 4:
        print('Usrm_GetExistObjectInfo requires 4 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetExistObjectInfo(eval(args[0]), eval(args[1]), eval(args[2]), args[3],))

elif cmd == 'SetThirdCSFSysConfig':
    if len(args) != 1:
        print('SetThirdCSFSysConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetThirdCSFSysConfig(eval(args[0]),))

elif cmd == 'GetThirdCSFSysConfig':
    if len(args) != 0:
        print('GetThirdCSFSysConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetThirdCSFSysConfig())

elif cmd == 'GetDocWatermarkConfig':
    if len(args) != 0:
        print('GetDocWatermarkConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocWatermarkConfig())

elif cmd == 'SetDocWatermarkConfig':
    if len(args) != 1:
        print('SetDocWatermarkConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocWatermarkConfig(args[0],))

elif cmd == 'AddWatermarkDoc':
    if len(args) != 2:
        print('AddWatermarkDoc requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddWatermarkDoc(args[0], eval(args[1]),))

elif cmd == 'UpdateWatermarkDoc':
    if len(args) != 2:
        print('UpdateWatermarkDoc requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateWatermarkDoc(args[0], eval(args[1]),))

elif cmd == 'GetWatermarkDocs':
    if len(args) != 0:
        print('GetWatermarkDocs requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetWatermarkDocs())

elif cmd == 'DeleteWatermarkDoc':
    if len(args) != 1:
        print('DeleteWatermarkDoc requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteWatermarkDoc(args[0],))

elif cmd == 'GetWatermarkDocCnt':
    if len(args) != 0:
        print('GetWatermarkDocCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetWatermarkDocCnt())

elif cmd == 'GetWatermarkDocByPage':
    if len(args) != 2:
        print('GetWatermarkDocByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetWatermarkDocByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'SearchWatermarkDocCnt':
    if len(args) != 1:
        print('SearchWatermarkDocCnt requires 1 args')
        sys.exit(1)
    pp.pprint(client.SearchWatermarkDocCnt(args[0],))

elif cmd == 'SearchWatermarkDocByPage':
    if len(args) != 3:
        print('SearchWatermarkDocByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.SearchWatermarkDocByPage(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'AddLinkTemplate':
    if len(args) != 1:
        print('AddLinkTemplate requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddLinkTemplate(eval(args[0]),))

elif cmd == 'DeleteLinkTemplate':
    if len(args) != 1:
        print('DeleteLinkTemplate requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteLinkTemplate(args[0],))

elif cmd == 'EditLinkTemplate':
    if len(args) != 1:
        print('EditLinkTemplate requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditLinkTemplate(eval(args[0]),))

elif cmd == 'GetLinkTemplate':
    if len(args) != 1:
        print('GetLinkTemplate requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetLinkTemplate(eval(args[0]),))

elif cmd == 'SearchLinkTemplate':
    if len(args) != 2:
        print('SearchLinkTemplate requires 2 args')
        sys.exit(1)
    pp.pprint(client.SearchLinkTemplate(eval(args[0]), args[1],))

elif cmd == 'GetCalculatedLinkTemplateBySharerId':
    if len(args) != 2:
        print('GetCalculatedLinkTemplateBySharerId requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetCalculatedLinkTemplateBySharerId(eval(args[0]), args[1],))

elif cmd == 'CheckExternalLinkPerm':
    if len(args) != 1:
        print('CheckExternalLinkPerm requires 1 args')
        sys.exit(1)
    pp.pprint(client.CheckExternalLinkPerm(eval(args[0]),))

elif cmd == 'DocLimitm_SetStatus':
    if len(args) != 1:
        print('DocLimitm_SetStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_SetStatus(eval(args[0]),))

elif cmd == 'DocLimitm_GetStatus':
    if len(args) != 0:
        print('DocLimitm_GetStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_GetStatus())

elif cmd == 'DocLimitm_AddNet':
    if len(args) != 1:
        print('DocLimitm_AddNet requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_AddNet(eval(args[0]),))

elif cmd == 'DocLimitm_EditNet':
    if len(args) != 1:
        print('DocLimitm_EditNet requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_EditNet(eval(args[0]),))

elif cmd == 'DocLimitm_DeleteNet':
    if len(args) != 1:
        print('DocLimitm_DeleteNet requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_DeleteNet(args[0],))

elif cmd == 'DocLimitm_GetNet':
    if len(args) != 0:
        print('DocLimitm_GetNet requires 0 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_GetNet())

elif cmd == 'DocLimitm_SearchNet':
    if len(args) != 1:
        print('DocLimitm_SearchNet requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_SearchNet(args[0],))

elif cmd == 'DocLimitm_AddDocs':
    if len(args) != 2:
        print('DocLimitm_AddDocs requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_AddDocs(args[0], eval(args[1]),))

elif cmd == 'DocLimitm_DeleteDocs':
    if len(args) != 2:
        print('DocLimitm_DeleteDocs requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_DeleteDocs(args[0], args[1],))

elif cmd == 'DocLimitm_GetDocs':
    if len(args) != 1:
        print('DocLimitm_GetDocs requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_GetDocs(args[0],))

elif cmd == 'DocLimitm_SearchDocs':
    if len(args) != 2:
        print('DocLimitm_SearchDocs requires 2 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_SearchDocs(args[0], args[1],))

elif cmd == 'DocLimitm_GetNetByDocId':
    if len(args) != 1:
        print('DocLimitm_GetNetByDocId requires 1 args')
        sys.exit(1)
    pp.pprint(client.DocLimitm_GetNetByDocId(args[0],))

elif cmd == 'Usrm_AddDocDownloadLimitInfo':
    if len(args) != 1:
        print('Usrm_AddDocDownloadLimitInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_AddDocDownloadLimitInfo(eval(args[0]),))

elif cmd == 'Usrm_EditDocDownloadLimitObject':
    if len(args) != 3:
        print('Usrm_EditDocDownloadLimitObject requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditDocDownloadLimitObject(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_EditDocDownloadLimitValue':
    if len(args) != 2:
        print('Usrm_EditDocDownloadLimitValue requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_EditDocDownloadLimitValue(args[0], eval(args[1]),))

elif cmd == 'Usrm_DeleteDocDownloadLimitInfo':
    if len(args) != 1:
        print('Usrm_DeleteDocDownloadLimitInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_DeleteDocDownloadLimitInfo(args[0],))

elif cmd == 'Usrm_GetDocDownloadLimitInfoCnt':
    if len(args) != 0:
        print('Usrm_GetDocDownloadLimitInfoCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDocDownloadLimitInfoCnt())

elif cmd == 'Usrm_GetDocDownloadLimitInfoByPage':
    if len(args) != 2:
        print('Usrm_GetDocDownloadLimitInfoByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDocDownloadLimitInfoByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'Usrm_SearchDocDownloadLimitInfoByPage':
    if len(args) != 3:
        print('Usrm_SearchDocDownloadLimitInfoByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchDocDownloadLimitInfoByPage(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'Usrm_SearchDocDownloadLimitInfoCnt':
    if len(args) != 1:
        print('Usrm_SearchDocDownloadLimitInfoCnt requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SearchDocDownloadLimitInfoCnt(args[0],))

elif cmd == 'Usrm_GetUserDocDownloadLimitValue':
    if len(args) != 1:
        print('Usrm_GetUserDocDownloadLimitValue requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetUserDocDownloadLimitValue(args[0],))

elif cmd == 'Usrm_SetDDLEmailNotifyStatus':
    if len(args) != 1:
        print('Usrm_SetDDLEmailNotifyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.Usrm_SetDDLEmailNotifyStatus(eval(args[0]),))

elif cmd == 'Usrm_GetDDLEmailNotifyStatus':
    if len(args) != 0:
        print('Usrm_GetDDLEmailNotifyStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.Usrm_GetDDLEmailNotifyStatus())

elif cmd == 'GetShareDocStatus':
    if len(args) != 2:
        print('GetShareDocStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetShareDocStatus(eval(args[0]), eval(args[1]),))

elif cmd == 'SetShareDocStatus':
    if len(args) != 3:
        print('SetShareDocStatus requires 3 args')
        sys.exit(1)
    pp.pprint(client.SetShareDocStatus(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'GetRetainFileStatus':
    if len(args) != 0:
        print('GetRetainFileStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetRetainFileStatus())

elif cmd == 'SetHideUserInfoStatus':
    if len(args) != 1:
        print('SetHideUserInfoStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetHideUserInfoStatus(eval(args[0]),))

elif cmd == 'GetHideUserInfoStatus':
    if len(args) != 0:
        print('GetHideUserInfoStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetHideUserInfoStatus())

elif cmd == 'HideOum_SetStatus':
    if len(args) != 1:
        print('HideOum_SetStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.HideOum_SetStatus(eval(args[0]),))

elif cmd == 'HideOum_GetStatus':
    if len(args) != 0:
        print('HideOum_GetStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.HideOum_GetStatus())

elif cmd == 'HideOum_Add':
    if len(args) != 1:
        print('HideOum_Add requires 1 args')
        sys.exit(1)
    pp.pprint(client.HideOum_Add(eval(args[0]),))

elif cmd == 'HideOum_Get':
    if len(args) != 0:
        print('HideOum_Get requires 0 args')
        sys.exit(1)
    pp.pprint(client.HideOum_Get())

elif cmd == 'HideOum_Search':
    if len(args) != 1:
        print('HideOum_Search requires 1 args')
        sys.exit(1)
    pp.pprint(client.HideOum_Search(args[0],))

elif cmd == 'HideOum_Delete':
    if len(args) != 1:
        print('HideOum_Delete requires 1 args')
        sys.exit(1)
    pp.pprint(client.HideOum_Delete(args[0],))

elif cmd == 'HideOum_Check':
    if len(args) != 1:
        print('HideOum_Check requires 1 args')
        sys.exit(1)
    pp.pprint(client.HideOum_Check(args[0],))

elif cmd == 'SetSearchUserConfig':
    if len(args) != 1:
        print('SetSearchUserConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetSearchUserConfig(eval(args[0]),))

elif cmd == 'GetSearchUserConfig':
    if len(args) != 0:
        print('GetSearchUserConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetSearchUserConfig())

elif cmd == 'SetCsfLevelAuditStatus':
    if len(args) != 1:
        print('SetCsfLevelAuditStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetCsfLevelAuditStatus(eval(args[0]),))

elif cmd == 'GetCsfLevelAuditStatus':
    if len(args) != 0:
        print('GetCsfLevelAuditStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetCsfLevelAuditStatus())

elif cmd == 'SetRetainOutLinkStatus':
    if len(args) != 1:
        print('SetRetainOutLinkStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetRetainOutLinkStatus(eval(args[0]),))

elif cmd == 'GetRetainOutLinkStatus':
    if len(args) != 0:
        print('GetRetainOutLinkStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetRetainOutLinkStatus())

elif cmd == 'Devicem_SearchUsersBindStatus':
    if len(args) != 4:
        print('Devicem_SearchUsersBindStatus requires 4 args')
        sys.exit(1)
    pp.pprint(client.Devicem_SearchUsersBindStatus(eval(args[0]), args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'Devicem_SearchUsersBindStatusCnt':
    if len(args) != 2:
        print('Devicem_SearchUsersBindStatusCnt requires 2 args')
        sys.exit(1)
    pp.pprint(client.Devicem_SearchUsersBindStatusCnt(eval(args[0]), args[1],))

elif cmd == 'GetAllAntivirusAdmin':
    if len(args) != 0:
        print('GetAllAntivirusAdmin requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAllAntivirusAdmin())

elif cmd == 'AddAntivirusAdmin':
    if len(args) != 1:
        print('AddAntivirusAdmin requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddAntivirusAdmin(args[0],))

elif cmd == 'SetExportWithPassWordStatus':
    if len(args) != 1:
        print('SetExportWithPassWordStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetExportWithPassWordStatus(eval(args[0]),))

elif cmd == 'GetExportWithPassWordStatus':
    if len(args) != 0:
        print('GetExportWithPassWordStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetExportWithPassWordStatus())

elif cmd == 'ExportActiveLog':
    if len(args) != 4:
        print('ExportActiveLog requires 4 args')
        sys.exit(1)
    pp.pprint(client.ExportActiveLog(args[0], args[1], eval(args[2]), eval(args[3]),))

elif cmd == 'ExportHistoryLog':
    if len(args) != 3:
        print('ExportHistoryLog requires 3 args')
        sys.exit(1)
    pp.pprint(client.ExportHistoryLog(args[0], eval(args[1]), args[2],))

elif cmd == 'GetCompressFileInfo':
    if len(args) != 1:
        print('GetCompressFileInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCompressFileInfo(args[0],))

elif cmd == 'GetGenCompressFileStatus':
    if len(args) != 1:
        print('GetGenCompressFileStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetGenCompressFileStatus(args[0],))

elif cmd == 'SetRecycleInfo':
    if len(args) != 2:
        print('SetRecycleInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetRecycleInfo(eval(args[0]), args[1],))

elif cmd == 'GetRecycleInfo':
    if len(args) != 1:
        print('GetRecycleInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetRecycleInfo(args[0],))

elif cmd == 'DelRecycleInfo':
    if len(args) != 1:
        print('DelRecycleInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelRecycleInfo(args[0],))

elif cmd == 'GetRecycleInfos':
    if len(args) != 0:
        print('GetRecycleInfos requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetRecycleInfos())

elif cmd == 'SMS_GetConfig':
    if len(args) != 0:
        print('SMS_GetConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.SMS_GetConfig())

elif cmd == 'SMS_SetConfig':
    if len(args) != 1:
        print('SMS_SetConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMS_SetConfig(args[0],))

elif cmd == 'SMS_Test':
    if len(args) != 1:
        print('SMS_Test requires 1 args')
        sys.exit(1)
    pp.pprint(client.SMS_Test(args[0],))

elif cmd == 'SMS_SendVcode':
    if len(args) != 3:
        print('SMS_SendVcode requires 3 args')
        sys.exit(1)
    pp.pprint(client.SMS_SendVcode(args[0], args[1], args[2],))

elif cmd == 'SMS_Activate':
    if len(args) != 5:
        print('SMS_Activate requires 5 args')
        sys.exit(1)
    pp.pprint(client.SMS_Activate(args[0], args[1], args[2], args[3], args[4],))

elif cmd == 'GetActiveReportMonth':
    if len(args) != 1:
        print('GetActiveReportMonth requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetActiveReportMonth(args[0],))

elif cmd == 'GetActiveReportYear':
    if len(args) != 1:
        print('GetActiveReportYear requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetActiveReportYear(args[0],))

elif cmd == 'ExportActiveReportMonth':
    if len(args) != 2:
        print('ExportActiveReportMonth requires 2 args')
        sys.exit(1)
    pp.pprint(client.ExportActiveReportMonth(args[0], args[1],))

elif cmd == 'ExportActiveReportYear':
    if len(args) != 2:
        print('ExportActiveReportYear requires 2 args')
        sys.exit(1)
    pp.pprint(client.ExportActiveReportYear(args[0], args[1],))

elif cmd == 'GetGenActiveReportStatus':
    if len(args) != 1:
        print('GetGenActiveReportStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetGenActiveReportStatus(args[0],))

elif cmd == 'GetActiveReportFileInfo':
    if len(args) != 1:
        print('GetActiveReportFileInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetActiveReportFileInfo(args[0],))

elif cmd == 'SetActiveReportNotifyStatus':
    if len(args) != 1:
        print('SetActiveReportNotifyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetActiveReportNotifyStatus(eval(args[0]),))

elif cmd == 'GetActiveReportNotifyStatus':
    if len(args) != 0:
        print('GetActiveReportNotifyStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetActiveReportNotifyStatus())

elif cmd == 'SetEisooRecipientEmail':
    if len(args) != 1:
        print('SetEisooRecipientEmail requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetEisooRecipientEmail(eval(args[0]),))

elif cmd == 'GetEisooRecipientEmail':
    if len(args) != 0:
        print('GetEisooRecipientEmail requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetEisooRecipientEmail())

elif cmd == 'UsrRolem_Add':
    if len(args) != 1:
        print('UsrRolem_Add requires 1 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_Add(eval(args[0]),))

elif cmd == 'UsrRolem_Get':
    if len(args) != 1:
        print('UsrRolem_Get requires 1 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_Get(args[0],))

elif cmd == 'UsrRolem_Edit':
    if len(args) != 2:
        print('UsrRolem_Edit requires 2 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_Edit(args[0], eval(args[1]),))

elif cmd == 'UsrRolem_Delete':
    if len(args) != 2:
        print('UsrRolem_Delete requires 2 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_Delete(args[0], args[1],))

elif cmd == 'UsrRolem_SetMember':
    if len(args) != 3:
        print('UsrRolem_SetMember requires 3 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_SetMember(args[0], args[1], eval(args[2]),))

elif cmd == 'UsrRolem_GetMember':
    if len(args) != 2:
        print('UsrRolem_GetMember requires 2 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_GetMember(args[0], args[1],))

elif cmd == 'UsrRolem_SearchMember':
    if len(args) != 3:
        print('UsrRolem_SearchMember requires 3 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_SearchMember(args[0], args[1], args[2],))

elif cmd == 'UsrRolem_DeleteMember':
    if len(args) != 3:
        print('UsrRolem_DeleteMember requires 3 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_DeleteMember(args[0], args[1], args[2],))

elif cmd == 'UsrRolem_GetRole':
    if len(args) != 1:
        print('UsrRolem_GetRole requires 1 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_GetRole(args[0],))

elif cmd == 'UsrRolem_GetMemberDetail':
    if len(args) != 3:
        print('UsrRolem_GetMemberDetail requires 3 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_GetMemberDetail(args[0], args[1], args[2],))

elif cmd == 'UsrRolem_GetSupervisoryRootOrg':
    if len(args) != 2:
        print('UsrRolem_GetSupervisoryRootOrg requires 2 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_GetSupervisoryRootOrg(args[0], args[1],))

elif cmd == 'UsrRolem_SearchDepartments':
    if len(args) != 5:
        print('UsrRolem_SearchDepartments requires 5 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_SearchDepartments(args[0], args[1], args[2], eval(args[3]), eval(args[4]),))

elif cmd == 'UsrRolem_SearchSupervisoryUsers':
    if len(args) != 5:
        print('UsrRolem_SearchSupervisoryUsers requires 5 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_SearchSupervisoryUsers(args[0], args[1], args[2], eval(args[3]), eval(args[4]),))

elif cmd == 'UsrRolem_GetMailListByRoleId':
    if len(args) != 1:
        print('UsrRolem_GetMailListByRoleId requires 1 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_GetMailListByRoleId(args[0],))

elif cmd == 'UsrRolem_CheckMemberExist':
    if len(args) != 2:
        print('UsrRolem_CheckMemberExist requires 2 args')
        sys.exit(1)
    pp.pprint(client.UsrRolem_CheckMemberExist(args[0], args[1],))

elif cmd == 'SetFileCrawlStatus':
    if len(args) != 1:
        print('SetFileCrawlStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetFileCrawlStatus(eval(args[0]),))

elif cmd == 'GetFileCrawlStatus':
    if len(args) != 0:
        print('GetFileCrawlStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetFileCrawlStatus())

elif cmd == 'AddFileCrawlConfig':
    if len(args) != 1:
        print('AddFileCrawlConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddFileCrawlConfig(eval(args[0]),))

elif cmd == 'SetFileCrawlConfig':
    if len(args) != 1:
        print('SetFileCrawlConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetFileCrawlConfig(eval(args[0]),))

elif cmd == 'DeleteFileCrawlConfig':
    if len(args) != 1:
        print('DeleteFileCrawlConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteFileCrawlConfig(eval(args[0]),))

elif cmd == 'GetFileCrawlConfigCount':
    if len(args) != 0:
        print('GetFileCrawlConfigCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetFileCrawlConfigCount())

elif cmd == 'GetFileCrawlConfig':
    if len(args) != 2:
        print('GetFileCrawlConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFileCrawlConfig(eval(args[0]), eval(args[1]),))

elif cmd == 'GetSearchFileCrawlConfigCount':
    if len(args) != 1:
        print('GetSearchFileCrawlConfigCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetSearchFileCrawlConfigCount(args[0],))

elif cmd == 'SearchFileCrawlConfig':
    if len(args) != 3:
        print('SearchFileCrawlConfig requires 3 args')
        sys.exit(1)
    pp.pprint(client.SearchFileCrawlConfig(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'GetFileCrawlConfigByUserId':
    if len(args) != 1:
        print('GetFileCrawlConfigByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetFileCrawlConfigByUserId(args[0],))

elif cmd == 'SetFileCrawlShowStatus':
    if len(args) != 1:
        print('SetFileCrawlShowStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetFileCrawlShowStatus(eval(args[0]),))

elif cmd == 'GetFileCrawlShowStatus':
    if len(args) != 0:
        print('GetFileCrawlShowStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetFileCrawlShowStatus())

elif cmd == 'SetDocAutoCleanStatus':
    if len(args) != 1:
        print('SetDocAutoCleanStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocAutoCleanStatus(eval(args[0]),))

elif cmd == 'GetDocAutoCleanStatus':
    if len(args) != 0:
        print('GetDocAutoCleanStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocAutoCleanStatus())

elif cmd == 'SetGlobalRecycleRetentionConfig':
    if len(args) != 1:
        print('SetGlobalRecycleRetentionConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalRecycleRetentionConfig(eval(args[0]),))

elif cmd == 'GetGlobalRecycleRetentionConfig':
    if len(args) != 0:
        print('GetGlobalRecycleRetentionConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetGlobalRecycleRetentionConfig())

elif cmd == 'AddAutoCleanConfig':
    if len(args) != 1:
        print('AddAutoCleanConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddAutoCleanConfig(eval(args[0]),))

elif cmd == 'EditAutoCleanConfig':
    if len(args) != 1:
        print('EditAutoCleanConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditAutoCleanConfig(eval(args[0]),))

elif cmd == 'DeleteAutoCleanConfig':
    if len(args) != 1:
        print('DeleteAutoCleanConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteAutoCleanConfig(args[0],))

elif cmd == 'SearchAutoCleanConfigByPage':
    if len(args) != 3:
        print('SearchAutoCleanConfigByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.SearchAutoCleanConfigByPage(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'GetAutoCleanConfigCount':
    if len(args) != 1:
        print('GetAutoCleanConfigCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetAutoCleanConfigCount(args[0],))

elif cmd == 'GetAllAutoCleanUserId':
    if len(args) != 0:
        print('GetAllAutoCleanUserId requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAllAutoCleanUserId())

elif cmd == 'GetAutoCleanConfigByUserId':
    if len(args) != 1:
        print('GetAutoCleanConfigByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetAutoCleanConfigByUserId(args[0],))

elif cmd == 'StartScanVirusTask':
    if len(args) != 3:
        print('StartScanVirusTask requires 3 args')
        sys.exit(1)
    pp.pprint(client.StartScanVirusTask(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'StopScanVirusTask':
    if len(args) != 0:
        print('StopScanVirusTask requires 0 args')
        sys.exit(1)
    pp.pprint(client.StopScanVirusTask())

elif cmd == 'ContinueScanVirusTask':
    if len(args) != 0:
        print('ContinueScanVirusTask requires 0 args')
        sys.exit(1)
    pp.pprint(client.ContinueScanVirusTask())

elif cmd == 'CancelScanVirusTask':
    if len(args) != 0:
        print('CancelScanVirusTask requires 0 args')
        sys.exit(1)
    pp.pprint(client.CancelScanVirusTask())

elif cmd == 'GetVirusInfoCnt':
    if len(args) != 0:
        print('GetVirusInfoCnt requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVirusInfoCnt())

elif cmd == 'GetVirusInfoByPage':
    if len(args) != 2:
        print('GetVirusInfoByPage requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetVirusInfoByPage(eval(args[0]), eval(args[1]),))

elif cmd == 'GetScanVirusTaskResult':
    if len(args) != 0:
        print('GetScanVirusTaskResult requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetScanVirusTaskResult())

elif cmd == 'SetGlobalVirusDB':
    if len(args) != 1:
        print('SetGlobalVirusDB requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetGlobalVirusDB(eval(args[0]),))

elif cmd == 'SetLocalVirusDB':
    if len(args) != 1:
        print('SetLocalVirusDB requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLocalVirusDB(eval(args[0]),))

elif cmd == 'GetVirusDB':
    if len(args) != 0:
        print('GetVirusDB requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVirusDB())

elif cmd == 'GetAntivirusOptionAuthStatus':
    if len(args) != 0:
        print('GetAntivirusOptionAuthStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAntivirusOptionAuthStatus())

elif cmd == 'NotifyScanFinish':
    if len(args) != 0:
        print('NotifyScanFinish requires 0 args')
        sys.exit(1)
    pp.pprint(client.NotifyScanFinish())

elif cmd == 'VirusFTPServerTest':
    if len(args) != 0:
        print('VirusFTPServerTest requires 0 args')
        sys.exit(1)
    pp.pprint(client.VirusFTPServerTest())

elif cmd == 'SetAntivirusWhiteList':
    if len(args) != 1:
        print('SetAntivirusWhiteList requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetAntivirusWhiteList(eval(args[0]),))

elif cmd == 'GetAntivirusWhiteList':
    if len(args) != 0:
        print('GetAntivirusWhiteList requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAntivirusWhiteList())

elif cmd == 'DeleteInvalidSlaveSiteVirusTask':
    if len(args) != 1:
        print('DeleteInvalidSlaveSiteVirusTask requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteInvalidSlaveSiteVirusTask(args[0],))

elif cmd == 'GetVirusDBDownloadUrl':
    if len(args) != 0:
        print('GetVirusDBDownloadUrl requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVirusDBDownloadUrl())

elif cmd == 'SetVirusDBDownloadUrl':
    if len(args) != 1:
        print('SetVirusDBDownloadUrl requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetVirusDBDownloadUrl(args[0],))

elif cmd == 'AddLocalSyncConfig':
    if len(args) != 1:
        print('AddLocalSyncConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddLocalSyncConfig(eval(args[0]),))

elif cmd == 'EditLocalSyncConfig':
    if len(args) != 1:
        print('EditLocalSyncConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditLocalSyncConfig(eval(args[0]),))

elif cmd == 'DeleteLocalSyncConfig':
    if len(args) != 1:
        print('DeleteLocalSyncConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteLocalSyncConfig(args[0],))

elif cmd == 'GetLocalSyncConfigCount':
    if len(args) != 1:
        print('GetLocalSyncConfigCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetLocalSyncConfigCount(args[0],))

elif cmd == 'SearchLocalSyncConfigByPage':
    if len(args) != 3:
        print('SearchLocalSyncConfigByPage requires 3 args')
        sys.exit(1)
    pp.pprint(client.SearchLocalSyncConfigByPage(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'GetLocalSyncConfigByUserId':
    if len(args) != 1:
        print('GetLocalSyncConfigByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetLocalSyncConfigByUserId(args[0],))

elif cmd == 'ExportSpaceReport':
    if len(args) != 2:
        print('ExportSpaceReport requires 2 args')
        sys.exit(1)
    pp.pprint(client.ExportSpaceReport(args[0], eval(args[1]),))

elif cmd == 'GetGenSpaceReportStatus':
    if len(args) != 1:
        print('GetGenSpaceReportStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetGenSpaceReportStatus(args[0],))

elif cmd == 'GetSpaceReportFilePath':
    if len(args) != 1:
        print('GetSpaceReportFilePath requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetSpaceReportFilePath(args[0],))

elif cmd == 'GetWebhookConfig':
    if len(args) != 0:
        print('GetWebhookConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetWebhookConfig())

elif cmd == 'SetWebhookConfig':
    if len(args) != 1:
        print('SetWebhookConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetWebhookConfig(eval(args[0]),))

elif cmd == 'TestWebhookConfig':
    if len(args) != 1:
        print('TestWebhookConfig requires 1 args')
        sys.exit(1)
    pp.pprint(client.TestWebhookConfig(args[0],))

elif cmd == 'NeedQuickStart':
    if len(args) != 2:
        print('NeedQuickStart requires 2 args')
        sys.exit(1)
    pp.pprint(client.NeedQuickStart(args[0], eval(args[1]),))

elif cmd == 'SetQuickStartStatus':
    if len(args) != 3:
        print('SetQuickStartStatus requires 3 args')
        sys.exit(1)
    pp.pprint(client.SetQuickStartStatus(args[0], eval(args[1]), eval(args[2]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
