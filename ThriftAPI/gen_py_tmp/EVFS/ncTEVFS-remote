#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from EVFS import ncTEVFS
from EVFS.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  string CreateMgrObject(string userId, string name)')
    print('  void RestoreMgrObject(string gns)')
    print('  void RemoveMgrObject(string gns, bool mark)')
    print('  void MoveMgrObjects(string userId, ncTEVFSGNSObjectSet cidObjects, string targetPath)')
    print('  bool ObjectExists(string gns)')
    print('  ncTEVFSGNSObjectSet GetSubObjectSet()')
    print('  void CreateDir(string gns, string dirName)')
    print('  ncTEVFSGNSObjectSet ListDirWithoutPermCheck(string gns)')
    print('  ncTEVFSGNSObjectSet ListFileWithoutPermCheck(string gns)')
    print('  string CopyWithoutPermCheck(string userId, string srcGns, string newParentGns, i32 ondup)')
    print('  bool CheckMgrObjectEmpty(string gns)')
    print('  bool CheckMgrObjectEmptyWithoutRecycleBin(string gns)')
    print('  string ConvertPath(string gns)')
    print('   ConvertPathByBatch( gnsList)')
    print('  string ConvertNamePath(string gns)')
    print('  void SetVersionMaxNum(i32 maxNum)')
    print('  i32 GetVersionMaxNum()')
    print('  void SetVersionBuildCycle(i32 buildCycle)')
    print('  i32 GetVersionBuildCycle()')
    print('  void SetTagMaxNum(i32 maxNum)')
    print('  i32 GetTagMaxNum()')
    print('  void SetLinkAccessCodeStatus(bool enable)')
    print('  bool GetLinkAccessCodeStatus()')
    print('  bool GetDocCommentStatus()')
    print('  void SetDocCommentStatus(bool enable)')
    print('  bool GetDocScoreStatus()')
    print('  void SetDocScoreStatus(bool enable)')
    print('  bool GetDocCommentConfigStatus()')
    print('  void SetLargeFileLimit(ncTEVFSLargeFileLimitConf conf)')
    print('  ncTEVFSLargeFileLimitConf GetLargeFileLimit()')
    print('  void SetFileSuffixLimit( suffixDocs)')
    print('   GetFileSuffixLimit()')
    print('  ncTETSResourceInfo GetETSResourceInfo(string gns)')
    print('   GetAllResourceInfo( gnsList)')
    print('  void ResetListCache()')
    print('  void EnableListCache()')
    print('  void DisableListCache()')
    print('  void EnableListCacheStats()')
    print('  void DisableListCacheStats()')
    print('  ncTEVFSListCacheInfo FetchListCacheInfo()')
    print('  ncTEVFSFilesCount GetCurrentFilesTotal()')
    print('   GetFilesTotal(ncTEVFSDate date, ncTEVFSDateUnit dateUnit)')
    print('   GetFilesChangeInfo(ncTEVFSDate date, ncTEVFSDateUnit dateUnit)')
    print('  ncTEVFSQuotaInfo FetchSpaceQuotaInfo(string cidGns)')
    print('  void SetQuotaInfo(string cidGns, i64 quota)')
    print('  i64 FetchOperatedInfo(ncTEVFSDate begDate, ncTEVFSDate endDate, ncTEVFSOperatedType opType)')
    print('   FetchAllOperatedInfo(ncTEVFSDate begDate, ncTEVFSDate endDate)')
    print('  bool GetRapidUploadSupport()')
    print('  void SetRapidUploadSupport(bool support)')
    print('  bool GetCrossOSSRapidUploadStatus()')
    print('  void SetCrossOSSRapidUploadStatus(bool enable)')
    print('  ncTEVFSRapidStatisInfo FetchRapidStatisInfo()')
    print('  i64 FetchTotalRapidFile(string fileName, i64 fileSizeMin, i64 fileSizeMax, i64 beginDate, i64 endDate)')
    print('   FetchRapidFilesInfo(string fileName, i64 fileSizeMin, i64 fileSizeMax, i64 beginDate, i64 endDate, i64 offset, i32 rows)')
    print('  i32 GetCSFLevel(string gns)')
    print('  i32 GetDirCSFLevel(string gns)')
    print('  void SetCsfLevel(string gns, i32 csfLevel, i32 userCsfLevel, string userId)')
    print('   GetLinkOwnerIds()')
    print('  void DeleteLinkByUserId(string userId)')
    print('  void DeleteFavoritesByUserId(string userId)')
    print('   GetOSSInfo()')
    print('  ncTEVFSOSSInfo GetOSSInfoById(string ossId)')
    print('  void ConnectOSS(ncTOSSAccessInfo accessInfo)')
    print('  void SetOSSInfo(ncTEVFSOSSInfo ossInfo)')
    print('   GetOSSBaseInfo(bool onlyEnabledOSS)')
    print('  ncTEVFSOSSBaseInfo GetOSSBaseInfoById(string ossId)')
    print('  void SetOSSEnableStatus(string ossId, bool enable)')
    print('  string GetSiteDefaultOSS()')
    print('  void SetSiteDefaultOSS(string ossId)')
    print('  void SetOSSSiteID(string ossId, string siteId)')
    print('   GetAllOSSInfo()')
    print('   GetOSSIDBySiteId(string siteId)')
    print('  string GetEncryptedPassword(string password)')
    print('  void UpdateLocalOSSInfo()')
    print('  void UpdateLocalSiteInfo()')
    print('  void AddProxyByOSSId(string ossId, ncTOSSProxyInfo proxyInfo)')
    print('  void DelProxyByOSSId(string ossId)')
    print('   GetAllProxyInfo()')
    print('  bool GetOSSProxyStatus()')
    print('  void SetOSSProxyStatus(bool enable)')
    print('  void UpdateOSSProxyInfo()')
    print('  void UpdateLocalOSSProxyInfo()')
    print('  i64 GetOSSSizeInfo()')
    print('  ncTEVFSOSSRequest GetUploadInfo(string cid, string objectId, string ossId)')
    print('  string InitMultiUpload(string cid, string objectId, string ossId, bool isExternalReq)')
    print('  ncTEVFSOSSRequest GetMultiUploadInfo(string cid, string objectId, string ossId, string uploadId, i32 partNum, bool isExternalReq)')
    print('  ncTEVFSOSSRequest GetCompleteMultiUploadInfo(string cid, string objectId, string ossId, string uploadId,  partInfos, bool isExternalReq)')
    print('  ncTEVFSOSSRequest GetDownloadInfo(string cid, string objectId, string ossId, string reqHost, bool useHttps, i64 validSeconds, string fileName, i64 fileSize, bool isExternalReq)')
    print('  ncTEVFSOSSRequest GetDeleteInfo(string cid, string objectId, string ossId)')
    print('  ncTEVFSOSSRequest GetHeadInfo(string cid, string objectId, string ossId)')
    print('  void SetAuthenticationDownloadValidSeconds(i64 validSeconds)')
    print('  i64 GetAuthenticationDownloadValidSeconds()')
    print('  void SetAuthenticationUploadValidSeconds(i64 validSeconds)')
    print('  i64 GetAuthenticationUploadValidSeconds()')
    print('   ListAttributes()')
    print('  void AddAttribute(ncTEVFSCustomAttribute pro)')
    print('  void SetAttribute(ncTEVFSCustomAttribute pro)')
    print('  void DelAttribute(i64 id)')
    print('  void SetAttributeStatus(i64 id, i32 status)')
    print('  string GetAttributeValue(i64 id)')
    print('  void SetPreConvertEnable(bool enable)')
    print('  void ObjMeta_AddAppInfo(string appId, string appName)')
    print('   ObjMeta_GetAppInfos()')
    print('  void ObjMeta_SetAppName(string appId, string appName)')
    print('  void ObjMeta_SetAppStatus(string appId, i32 status)')
    print('  void ObjMeta_DeleteAppInfo(string appId)')
    print('  void SetUserDownloadLimitStatus(bool enable)')
    print('  bool GetUserDonwloadLimitStatus()')
    print('  void AddUserDownloadLimitInfos( limitInfos)')
    print('   GetUserDownloadLimitInfos()')
    print('  void DeleteUserDownloadLimitInfos( userIds)')
    print('   GetQuarantineFileList(ncTFiltrationParam filter, i64 start, i64 limit)')
    print('   GetFileVersionList(string docid, string key)')
    print('  i64 GetQuarantineFileCount(ncTFiltrationParam filter)')
    print('  ncTOSDowndloadRetParam OSDownload(string gns, string versionId, string authType, string reqHost, bool usehttps, string saveName)')
    print('  string RestoreQuarantineFile(string gns, i32 ondup)')
    print('  string DeleteQuarantineFile(string gns)')
    print('  ncTQuarantineRetMsg Quarantine(string docId, string reason, ncTEVFSQuarantineType type)')
    print('  ncTQuarantineConfig QRT_GetConfig()')
    print('  void QRT_SetAppealProtectTime(i32 days)')
    print('  void QRT_SetAutoDeleteTime(i32 days)')
    print('  string QRT_AppealApproval(string docid, bool approvalResult, i32 ondup, string appealSuggest)')
    print('  ncTEVFSOutLinkAccessInfoCount GetOutLinkAccessInfoCount(string name)')
    print('   GetPageOutLinkAccessInfo(ncTEVFSGetPageOutLinkAccessInfoParam param)')
    print('  ncTEVFSOutLinkFileInfo GetOutLinkFileInfo(i64 id)')
    print('  ncTEVFSFileInfoCount GetFileInfoCount(string name)')
    print('   GetPageFileInfo(ncTEVFSGetPageFileInfoParam param)')
    print('   GetFileRevisions(string docId)')
    print('  string GetOSSIdByIntranetIP(string intranetIP)')
    print('  void SetOSSIntranetIP(string ossId, string intranetIP)')
    print('  void DeleteOSSIntranetIP(string ossId, string intranetIP)')
    print('  bool GetDocDueRemindStatus()')
    print('  void SetDocDueRemindStatus(bool enable)')
    print('  i32 GetDocDueRemindMsgSendTime()')
    print('  void SetDocDueRemindMsgSendTime(i32 hour)')
    print('  void SetNSQPubEnableStatus(bool enable)')
    print('  bool GetNSQPubEnableStatus()')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ncTEVFS.Client(protocol)
transport.open()

if cmd == 'CreateMgrObject':
    if len(args) != 2:
        print('CreateMgrObject requires 2 args')
        sys.exit(1)
    pp.pprint(client.CreateMgrObject(args[0], args[1],))

elif cmd == 'RestoreMgrObject':
    if len(args) != 1:
        print('RestoreMgrObject requires 1 args')
        sys.exit(1)
    pp.pprint(client.RestoreMgrObject(args[0],))

elif cmd == 'RemoveMgrObject':
    if len(args) != 2:
        print('RemoveMgrObject requires 2 args')
        sys.exit(1)
    pp.pprint(client.RemoveMgrObject(args[0], eval(args[1]),))

elif cmd == 'MoveMgrObjects':
    if len(args) != 3:
        print('MoveMgrObjects requires 3 args')
        sys.exit(1)
    pp.pprint(client.MoveMgrObjects(args[0], eval(args[1]), args[2],))

elif cmd == 'ObjectExists':
    if len(args) != 1:
        print('ObjectExists requires 1 args')
        sys.exit(1)
    pp.pprint(client.ObjectExists(args[0],))

elif cmd == 'GetSubObjectSet':
    if len(args) != 0:
        print('GetSubObjectSet requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetSubObjectSet())

elif cmd == 'CreateDir':
    if len(args) != 2:
        print('CreateDir requires 2 args')
        sys.exit(1)
    pp.pprint(client.CreateDir(args[0], args[1],))

elif cmd == 'ListDirWithoutPermCheck':
    if len(args) != 1:
        print('ListDirWithoutPermCheck requires 1 args')
        sys.exit(1)
    pp.pprint(client.ListDirWithoutPermCheck(args[0],))

elif cmd == 'ListFileWithoutPermCheck':
    if len(args) != 1:
        print('ListFileWithoutPermCheck requires 1 args')
        sys.exit(1)
    pp.pprint(client.ListFileWithoutPermCheck(args[0],))

elif cmd == 'CopyWithoutPermCheck':
    if len(args) != 4:
        print('CopyWithoutPermCheck requires 4 args')
        sys.exit(1)
    pp.pprint(client.CopyWithoutPermCheck(args[0], args[1], args[2], eval(args[3]),))

elif cmd == 'CheckMgrObjectEmpty':
    if len(args) != 1:
        print('CheckMgrObjectEmpty requires 1 args')
        sys.exit(1)
    pp.pprint(client.CheckMgrObjectEmpty(args[0],))

elif cmd == 'CheckMgrObjectEmptyWithoutRecycleBin':
    if len(args) != 1:
        print('CheckMgrObjectEmptyWithoutRecycleBin requires 1 args')
        sys.exit(1)
    pp.pprint(client.CheckMgrObjectEmptyWithoutRecycleBin(args[0],))

elif cmd == 'ConvertPath':
    if len(args) != 1:
        print('ConvertPath requires 1 args')
        sys.exit(1)
    pp.pprint(client.ConvertPath(args[0],))

elif cmd == 'ConvertPathByBatch':
    if len(args) != 1:
        print('ConvertPathByBatch requires 1 args')
        sys.exit(1)
    pp.pprint(client.ConvertPathByBatch(eval(args[0]),))

elif cmd == 'ConvertNamePath':
    if len(args) != 1:
        print('ConvertNamePath requires 1 args')
        sys.exit(1)
    pp.pprint(client.ConvertNamePath(args[0],))

elif cmd == 'SetVersionMaxNum':
    if len(args) != 1:
        print('SetVersionMaxNum requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetVersionMaxNum(eval(args[0]),))

elif cmd == 'GetVersionMaxNum':
    if len(args) != 0:
        print('GetVersionMaxNum requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVersionMaxNum())

elif cmd == 'SetVersionBuildCycle':
    if len(args) != 1:
        print('SetVersionBuildCycle requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetVersionBuildCycle(eval(args[0]),))

elif cmd == 'GetVersionBuildCycle':
    if len(args) != 0:
        print('GetVersionBuildCycle requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVersionBuildCycle())

elif cmd == 'SetTagMaxNum':
    if len(args) != 1:
        print('SetTagMaxNum requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetTagMaxNum(eval(args[0]),))

elif cmd == 'GetTagMaxNum':
    if len(args) != 0:
        print('GetTagMaxNum requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetTagMaxNum())

elif cmd == 'SetLinkAccessCodeStatus':
    if len(args) != 1:
        print('SetLinkAccessCodeStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLinkAccessCodeStatus(eval(args[0]),))

elif cmd == 'GetLinkAccessCodeStatus':
    if len(args) != 0:
        print('GetLinkAccessCodeStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLinkAccessCodeStatus())

elif cmd == 'GetDocCommentStatus':
    if len(args) != 0:
        print('GetDocCommentStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocCommentStatus())

elif cmd == 'SetDocCommentStatus':
    if len(args) != 1:
        print('SetDocCommentStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocCommentStatus(eval(args[0]),))

elif cmd == 'GetDocScoreStatus':
    if len(args) != 0:
        print('GetDocScoreStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocScoreStatus())

elif cmd == 'SetDocScoreStatus':
    if len(args) != 1:
        print('SetDocScoreStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocScoreStatus(eval(args[0]),))

elif cmd == 'GetDocCommentConfigStatus':
    if len(args) != 0:
        print('GetDocCommentConfigStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocCommentConfigStatus())

elif cmd == 'SetLargeFileLimit':
    if len(args) != 1:
        print('SetLargeFileLimit requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetLargeFileLimit(eval(args[0]),))

elif cmd == 'GetLargeFileLimit':
    if len(args) != 0:
        print('GetLargeFileLimit requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLargeFileLimit())

elif cmd == 'SetFileSuffixLimit':
    if len(args) != 1:
        print('SetFileSuffixLimit requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetFileSuffixLimit(eval(args[0]),))

elif cmd == 'GetFileSuffixLimit':
    if len(args) != 0:
        print('GetFileSuffixLimit requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetFileSuffixLimit())

elif cmd == 'GetETSResourceInfo':
    if len(args) != 1:
        print('GetETSResourceInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetETSResourceInfo(args[0],))

elif cmd == 'GetAllResourceInfo':
    if len(args) != 1:
        print('GetAllResourceInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetAllResourceInfo(eval(args[0]),))

elif cmd == 'ResetListCache':
    if len(args) != 0:
        print('ResetListCache requires 0 args')
        sys.exit(1)
    pp.pprint(client.ResetListCache())

elif cmd == 'EnableListCache':
    if len(args) != 0:
        print('EnableListCache requires 0 args')
        sys.exit(1)
    pp.pprint(client.EnableListCache())

elif cmd == 'DisableListCache':
    if len(args) != 0:
        print('DisableListCache requires 0 args')
        sys.exit(1)
    pp.pprint(client.DisableListCache())

elif cmd == 'EnableListCacheStats':
    if len(args) != 0:
        print('EnableListCacheStats requires 0 args')
        sys.exit(1)
    pp.pprint(client.EnableListCacheStats())

elif cmd == 'DisableListCacheStats':
    if len(args) != 0:
        print('DisableListCacheStats requires 0 args')
        sys.exit(1)
    pp.pprint(client.DisableListCacheStats())

elif cmd == 'FetchListCacheInfo':
    if len(args) != 0:
        print('FetchListCacheInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.FetchListCacheInfo())

elif cmd == 'GetCurrentFilesTotal':
    if len(args) != 0:
        print('GetCurrentFilesTotal requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetCurrentFilesTotal())

elif cmd == 'GetFilesTotal':
    if len(args) != 2:
        print('GetFilesTotal requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFilesTotal(eval(args[0]), eval(args[1]),))

elif cmd == 'GetFilesChangeInfo':
    if len(args) != 2:
        print('GetFilesChangeInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFilesChangeInfo(eval(args[0]), eval(args[1]),))

elif cmd == 'FetchSpaceQuotaInfo':
    if len(args) != 1:
        print('FetchSpaceQuotaInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.FetchSpaceQuotaInfo(args[0],))

elif cmd == 'SetQuotaInfo':
    if len(args) != 2:
        print('SetQuotaInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetQuotaInfo(args[0], eval(args[1]),))

elif cmd == 'FetchOperatedInfo':
    if len(args) != 3:
        print('FetchOperatedInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.FetchOperatedInfo(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'FetchAllOperatedInfo':
    if len(args) != 2:
        print('FetchAllOperatedInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.FetchAllOperatedInfo(eval(args[0]), eval(args[1]),))

elif cmd == 'GetRapidUploadSupport':
    if len(args) != 0:
        print('GetRapidUploadSupport requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetRapidUploadSupport())

elif cmd == 'SetRapidUploadSupport':
    if len(args) != 1:
        print('SetRapidUploadSupport requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetRapidUploadSupport(eval(args[0]),))

elif cmd == 'GetCrossOSSRapidUploadStatus':
    if len(args) != 0:
        print('GetCrossOSSRapidUploadStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetCrossOSSRapidUploadStatus())

elif cmd == 'SetCrossOSSRapidUploadStatus':
    if len(args) != 1:
        print('SetCrossOSSRapidUploadStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetCrossOSSRapidUploadStatus(eval(args[0]),))

elif cmd == 'FetchRapidStatisInfo':
    if len(args) != 0:
        print('FetchRapidStatisInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.FetchRapidStatisInfo())

elif cmd == 'FetchTotalRapidFile':
    if len(args) != 5:
        print('FetchTotalRapidFile requires 5 args')
        sys.exit(1)
    pp.pprint(client.FetchTotalRapidFile(args[0], eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'FetchRapidFilesInfo':
    if len(args) != 7:
        print('FetchRapidFilesInfo requires 7 args')
        sys.exit(1)
    pp.pprint(client.FetchRapidFilesInfo(args[0], eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]), eval(args[5]), eval(args[6]),))

elif cmd == 'GetCSFLevel':
    if len(args) != 1:
        print('GetCSFLevel requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCSFLevel(args[0],))

elif cmd == 'GetDirCSFLevel':
    if len(args) != 1:
        print('GetDirCSFLevel requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetDirCSFLevel(args[0],))

elif cmd == 'SetCsfLevel':
    if len(args) != 4:
        print('SetCsfLevel requires 4 args')
        sys.exit(1)
    pp.pprint(client.SetCsfLevel(args[0], eval(args[1]), eval(args[2]), args[3],))

elif cmd == 'GetLinkOwnerIds':
    if len(args) != 0:
        print('GetLinkOwnerIds requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLinkOwnerIds())

elif cmd == 'DeleteLinkByUserId':
    if len(args) != 1:
        print('DeleteLinkByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteLinkByUserId(args[0],))

elif cmd == 'DeleteFavoritesByUserId':
    if len(args) != 1:
        print('DeleteFavoritesByUserId requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteFavoritesByUserId(args[0],))

elif cmd == 'GetOSSInfo':
    if len(args) != 0:
        print('GetOSSInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetOSSInfo())

elif cmd == 'GetOSSInfoById':
    if len(args) != 1:
        print('GetOSSInfoById requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSSInfoById(args[0],))

elif cmd == 'ConnectOSS':
    if len(args) != 1:
        print('ConnectOSS requires 1 args')
        sys.exit(1)
    pp.pprint(client.ConnectOSS(eval(args[0]),))

elif cmd == 'SetOSSInfo':
    if len(args) != 1:
        print('SetOSSInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetOSSInfo(eval(args[0]),))

elif cmd == 'GetOSSBaseInfo':
    if len(args) != 1:
        print('GetOSSBaseInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSSBaseInfo(eval(args[0]),))

elif cmd == 'GetOSSBaseInfoById':
    if len(args) != 1:
        print('GetOSSBaseInfoById requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSSBaseInfoById(args[0],))

elif cmd == 'SetOSSEnableStatus':
    if len(args) != 2:
        print('SetOSSEnableStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetOSSEnableStatus(args[0], eval(args[1]),))

elif cmd == 'GetSiteDefaultOSS':
    if len(args) != 0:
        print('GetSiteDefaultOSS requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetSiteDefaultOSS())

elif cmd == 'SetSiteDefaultOSS':
    if len(args) != 1:
        print('SetSiteDefaultOSS requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetSiteDefaultOSS(args[0],))

elif cmd == 'SetOSSSiteID':
    if len(args) != 2:
        print('SetOSSSiteID requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetOSSSiteID(args[0], args[1],))

elif cmd == 'GetAllOSSInfo':
    if len(args) != 0:
        print('GetAllOSSInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAllOSSInfo())

elif cmd == 'GetOSSIDBySiteId':
    if len(args) != 1:
        print('GetOSSIDBySiteId requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSSIDBySiteId(args[0],))

elif cmd == 'GetEncryptedPassword':
    if len(args) != 1:
        print('GetEncryptedPassword requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetEncryptedPassword(args[0],))

elif cmd == 'UpdateLocalOSSInfo':
    if len(args) != 0:
        print('UpdateLocalOSSInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.UpdateLocalOSSInfo())

elif cmd == 'UpdateLocalSiteInfo':
    if len(args) != 0:
        print('UpdateLocalSiteInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.UpdateLocalSiteInfo())

elif cmd == 'AddProxyByOSSId':
    if len(args) != 2:
        print('AddProxyByOSSId requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddProxyByOSSId(args[0], eval(args[1]),))

elif cmd == 'DelProxyByOSSId':
    if len(args) != 1:
        print('DelProxyByOSSId requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelProxyByOSSId(args[0],))

elif cmd == 'GetAllProxyInfo':
    if len(args) != 0:
        print('GetAllProxyInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAllProxyInfo())

elif cmd == 'GetOSSProxyStatus':
    if len(args) != 0:
        print('GetOSSProxyStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetOSSProxyStatus())

elif cmd == 'SetOSSProxyStatus':
    if len(args) != 1:
        print('SetOSSProxyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetOSSProxyStatus(eval(args[0]),))

elif cmd == 'UpdateOSSProxyInfo':
    if len(args) != 0:
        print('UpdateOSSProxyInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.UpdateOSSProxyInfo())

elif cmd == 'UpdateLocalOSSProxyInfo':
    if len(args) != 0:
        print('UpdateLocalOSSProxyInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.UpdateLocalOSSProxyInfo())

elif cmd == 'GetOSSSizeInfo':
    if len(args) != 0:
        print('GetOSSSizeInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetOSSSizeInfo())

elif cmd == 'GetUploadInfo':
    if len(args) != 3:
        print('GetUploadInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetUploadInfo(args[0], args[1], args[2],))

elif cmd == 'InitMultiUpload':
    if len(args) != 4:
        print('InitMultiUpload requires 4 args')
        sys.exit(1)
    pp.pprint(client.InitMultiUpload(args[0], args[1], args[2], eval(args[3]),))

elif cmd == 'GetMultiUploadInfo':
    if len(args) != 6:
        print('GetMultiUploadInfo requires 6 args')
        sys.exit(1)
    pp.pprint(client.GetMultiUploadInfo(args[0], args[1], args[2], args[3], eval(args[4]), eval(args[5]),))

elif cmd == 'GetCompleteMultiUploadInfo':
    if len(args) != 6:
        print('GetCompleteMultiUploadInfo requires 6 args')
        sys.exit(1)
    pp.pprint(client.GetCompleteMultiUploadInfo(args[0], args[1], args[2], args[3], eval(args[4]), eval(args[5]),))

elif cmd == 'GetDownloadInfo':
    if len(args) != 9:
        print('GetDownloadInfo requires 9 args')
        sys.exit(1)
    pp.pprint(client.GetDownloadInfo(args[0], args[1], args[2], args[3], eval(args[4]), eval(args[5]), args[6], eval(args[7]), eval(args[8]),))

elif cmd == 'GetDeleteInfo':
    if len(args) != 3:
        print('GetDeleteInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetDeleteInfo(args[0], args[1], args[2],))

elif cmd == 'GetHeadInfo':
    if len(args) != 3:
        print('GetHeadInfo requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetHeadInfo(args[0], args[1], args[2],))

elif cmd == 'SetAuthenticationDownloadValidSeconds':
    if len(args) != 1:
        print('SetAuthenticationDownloadValidSeconds requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetAuthenticationDownloadValidSeconds(eval(args[0]),))

elif cmd == 'GetAuthenticationDownloadValidSeconds':
    if len(args) != 0:
        print('GetAuthenticationDownloadValidSeconds requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAuthenticationDownloadValidSeconds())

elif cmd == 'SetAuthenticationUploadValidSeconds':
    if len(args) != 1:
        print('SetAuthenticationUploadValidSeconds requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetAuthenticationUploadValidSeconds(eval(args[0]),))

elif cmd == 'GetAuthenticationUploadValidSeconds':
    if len(args) != 0:
        print('GetAuthenticationUploadValidSeconds requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAuthenticationUploadValidSeconds())

elif cmd == 'ListAttributes':
    if len(args) != 0:
        print('ListAttributes requires 0 args')
        sys.exit(1)
    pp.pprint(client.ListAttributes())

elif cmd == 'AddAttribute':
    if len(args) != 1:
        print('AddAttribute requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddAttribute(eval(args[0]),))

elif cmd == 'SetAttribute':
    if len(args) != 1:
        print('SetAttribute requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetAttribute(eval(args[0]),))

elif cmd == 'DelAttribute':
    if len(args) != 1:
        print('DelAttribute requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelAttribute(eval(args[0]),))

elif cmd == 'SetAttributeStatus':
    if len(args) != 2:
        print('SetAttributeStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetAttributeStatus(eval(args[0]), eval(args[1]),))

elif cmd == 'GetAttributeValue':
    if len(args) != 1:
        print('GetAttributeValue requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetAttributeValue(eval(args[0]),))

elif cmd == 'SetPreConvertEnable':
    if len(args) != 1:
        print('SetPreConvertEnable requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetPreConvertEnable(eval(args[0]),))

elif cmd == 'ObjMeta_AddAppInfo':
    if len(args) != 2:
        print('ObjMeta_AddAppInfo requires 2 args')
        sys.exit(1)
    pp.pprint(client.ObjMeta_AddAppInfo(args[0], args[1],))

elif cmd == 'ObjMeta_GetAppInfos':
    if len(args) != 0:
        print('ObjMeta_GetAppInfos requires 0 args')
        sys.exit(1)
    pp.pprint(client.ObjMeta_GetAppInfos())

elif cmd == 'ObjMeta_SetAppName':
    if len(args) != 2:
        print('ObjMeta_SetAppName requires 2 args')
        sys.exit(1)
    pp.pprint(client.ObjMeta_SetAppName(args[0], args[1],))

elif cmd == 'ObjMeta_SetAppStatus':
    if len(args) != 2:
        print('ObjMeta_SetAppStatus requires 2 args')
        sys.exit(1)
    pp.pprint(client.ObjMeta_SetAppStatus(args[0], eval(args[1]),))

elif cmd == 'ObjMeta_DeleteAppInfo':
    if len(args) != 1:
        print('ObjMeta_DeleteAppInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.ObjMeta_DeleteAppInfo(args[0],))

elif cmd == 'SetUserDownloadLimitStatus':
    if len(args) != 1:
        print('SetUserDownloadLimitStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetUserDownloadLimitStatus(eval(args[0]),))

elif cmd == 'GetUserDonwloadLimitStatus':
    if len(args) != 0:
        print('GetUserDonwloadLimitStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetUserDonwloadLimitStatus())

elif cmd == 'AddUserDownloadLimitInfos':
    if len(args) != 1:
        print('AddUserDownloadLimitInfos requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddUserDownloadLimitInfos(eval(args[0]),))

elif cmd == 'GetUserDownloadLimitInfos':
    if len(args) != 0:
        print('GetUserDownloadLimitInfos requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetUserDownloadLimitInfos())

elif cmd == 'DeleteUserDownloadLimitInfos':
    if len(args) != 1:
        print('DeleteUserDownloadLimitInfos requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteUserDownloadLimitInfos(eval(args[0]),))

elif cmd == 'GetQuarantineFileList':
    if len(args) != 3:
        print('GetQuarantineFileList requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetQuarantineFileList(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'GetFileVersionList':
    if len(args) != 2:
        print('GetFileVersionList requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFileVersionList(args[0], args[1],))

elif cmd == 'GetQuarantineFileCount':
    if len(args) != 1:
        print('GetQuarantineFileCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetQuarantineFileCount(eval(args[0]),))

elif cmd == 'OSDownload':
    if len(args) != 6:
        print('OSDownload requires 6 args')
        sys.exit(1)
    pp.pprint(client.OSDownload(args[0], args[1], args[2], args[3], eval(args[4]), args[5],))

elif cmd == 'RestoreQuarantineFile':
    if len(args) != 2:
        print('RestoreQuarantineFile requires 2 args')
        sys.exit(1)
    pp.pprint(client.RestoreQuarantineFile(args[0], eval(args[1]),))

elif cmd == 'DeleteQuarantineFile':
    if len(args) != 1:
        print('DeleteQuarantineFile requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteQuarantineFile(args[0],))

elif cmd == 'Quarantine':
    if len(args) != 3:
        print('Quarantine requires 3 args')
        sys.exit(1)
    pp.pprint(client.Quarantine(args[0], args[1], eval(args[2]),))

elif cmd == 'QRT_GetConfig':
    if len(args) != 0:
        print('QRT_GetConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.QRT_GetConfig())

elif cmd == 'QRT_SetAppealProtectTime':
    if len(args) != 1:
        print('QRT_SetAppealProtectTime requires 1 args')
        sys.exit(1)
    pp.pprint(client.QRT_SetAppealProtectTime(eval(args[0]),))

elif cmd == 'QRT_SetAutoDeleteTime':
    if len(args) != 1:
        print('QRT_SetAutoDeleteTime requires 1 args')
        sys.exit(1)
    pp.pprint(client.QRT_SetAutoDeleteTime(eval(args[0]),))

elif cmd == 'QRT_AppealApproval':
    if len(args) != 4:
        print('QRT_AppealApproval requires 4 args')
        sys.exit(1)
    pp.pprint(client.QRT_AppealApproval(args[0], eval(args[1]), eval(args[2]), args[3],))

elif cmd == 'GetOutLinkAccessInfoCount':
    if len(args) != 1:
        print('GetOutLinkAccessInfoCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOutLinkAccessInfoCount(args[0],))

elif cmd == 'GetPageOutLinkAccessInfo':
    if len(args) != 1:
        print('GetPageOutLinkAccessInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetPageOutLinkAccessInfo(eval(args[0]),))

elif cmd == 'GetOutLinkFileInfo':
    if len(args) != 1:
        print('GetOutLinkFileInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOutLinkFileInfo(eval(args[0]),))

elif cmd == 'GetFileInfoCount':
    if len(args) != 1:
        print('GetFileInfoCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetFileInfoCount(args[0],))

elif cmd == 'GetPageFileInfo':
    if len(args) != 1:
        print('GetPageFileInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetPageFileInfo(eval(args[0]),))

elif cmd == 'GetFileRevisions':
    if len(args) != 1:
        print('GetFileRevisions requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetFileRevisions(args[0],))

elif cmd == 'GetOSSIdByIntranetIP':
    if len(args) != 1:
        print('GetOSSIdByIntranetIP requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetOSSIdByIntranetIP(args[0],))

elif cmd == 'SetOSSIntranetIP':
    if len(args) != 2:
        print('SetOSSIntranetIP requires 2 args')
        sys.exit(1)
    pp.pprint(client.SetOSSIntranetIP(args[0], args[1],))

elif cmd == 'DeleteOSSIntranetIP':
    if len(args) != 2:
        print('DeleteOSSIntranetIP requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteOSSIntranetIP(args[0], args[1],))

elif cmd == 'GetDocDueRemindStatus':
    if len(args) != 0:
        print('GetDocDueRemindStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocDueRemindStatus())

elif cmd == 'SetDocDueRemindStatus':
    if len(args) != 1:
        print('SetDocDueRemindStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocDueRemindStatus(eval(args[0]),))

elif cmd == 'GetDocDueRemindMsgSendTime':
    if len(args) != 0:
        print('GetDocDueRemindMsgSendTime requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDocDueRemindMsgSendTime())

elif cmd == 'SetDocDueRemindMsgSendTime':
    if len(args) != 1:
        print('SetDocDueRemindMsgSendTime requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetDocDueRemindMsgSendTime(eval(args[0]),))

elif cmd == 'SetNSQPubEnableStatus':
    if len(args) != 1:
        print('SetNSQPubEnableStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetNSQPubEnableStatus(eval(args[0]),))

elif cmd == 'GetNSQPubEnableStatus':
    if len(args) != 0:
        print('GetNSQPubEnableStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetNSQPubEnableStatus())

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
